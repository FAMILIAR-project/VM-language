/*
* generated by Xtext
*/
grammar InternalVM;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package fr.inria.lang.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.inria.lang.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.inria.lang.services.VMGrammarAccess;

}

@parser::members {

 	private VMGrammarAccess grammarAccess;
 	
    public InternalVMParser(TokenStream input, VMGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected VMGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getBlocksVmBlockParserRuleCall_0()); 
	    }
		lv_blocks_0_0=ruleVmBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"blocks",
        		lv_blocks_0_0, 
        		"VmBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRuleVmBlock
entryRuleVmBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVmBlockRule()); }
	 iv_ruleVmBlock=ruleVmBlock 
	 { $current=$iv_ruleVmBlock.current; } 
	 EOF 
;

// Rule VmBlock
ruleVmBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getVmBlockAccess().getPackageDeclarationParserRuleCall_0()); 
    }
    this_PackageDeclaration_0=rulePackageDeclaration
    { 
        $current = $this_PackageDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVmBlockAccess().getImportDeclarationParserRuleCall_1()); 
    }
    this_ImportDeclaration_1=ruleImportDeclaration
    { 
        $current = $this_ImportDeclaration_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVmBlockAccess().getMetaDataDeclarationParserRuleCall_2()); 
    }
    this_MetaDataDeclaration_2=ruleMetaDataDeclaration
    { 
        $current = $this_MetaDataDeclaration_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVmBlockAccess().getRelationshipsParserRuleCall_3()); 
    }
    this_Relationships_3=ruleRelationships
    { 
        $current = $this_Relationships_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVmBlockAccess().getAttributesParserRuleCall_4()); 
    }
    this_Attributes_4=ruleAttributes
    { 
        $current = $this_Attributes_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVmBlockAccess().getDescriptionsParserRuleCall_5()); 
    }
    this_Descriptions_5=ruleDescriptions
    { 
        $current = $this_Descriptions_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVmBlockAccess().getConstraintsParserRuleCall_6()); 
    }
    this_Constraints_6=ruleConstraints
    { 
        $current = $this_Constraints_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVmBlockAccess().getObjectivesParserRuleCall_7()); 
    }
    this_Objectives_7=ruleObjectives
    { 
        $current = $this_Objectives_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVmBlockAccess().getConfigurationsParserRuleCall_8()); 
    }
    this_Configurations_8=ruleConfigurations
    { 
        $current = $this_Configurations_8.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePackageDeclaration
entryRulePackageDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageDeclarationRule()); }
	 iv_rulePackageDeclaration=rulePackageDeclaration 
	 { $current=$iv_rulePackageDeclaration.current; } 
	 EOF 
;

// Rule PackageDeclaration
rulePackageDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='package' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageDeclarationAccess().getBlocksVmBlockParserRuleCall_3_0()); 
	    }
		lv_blocks_3_0=ruleVmBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
	        }
       		add(
       			$current, 
       			"blocks",
        		lv_blocks_3_0, 
        		"VmBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleImportDeclaration
entryRuleImportDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportDeclarationRule()); }
	 iv_ruleImportDeclaration=ruleImportDeclaration 
	 { $current=$iv_ruleImportDeclaration.current; } 
	 EOF 
;

// Rule ImportDeclaration
ruleImportDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportDeclarationAccess().getImportKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); 
	    }
		lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportDeclarationRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_1_0, 
        		"QualifiedNameWithWildcard");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMetaDataDeclaration
entryRuleMetaDataDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMetaDataDeclarationRule()); }
	 iv_ruleMetaDataDeclaration=ruleMetaDataDeclaration 
	 { $current=$iv_ruleMetaDataDeclaration.current; } 
	 EOF 
;

// Rule MetaDataDeclaration
ruleMetaDataDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup(), 0);
	 				}
					({true}?=>(	otherlv_1='@name' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMetaDataDeclarationAccess().getNameKeyword_0_0());
    }
(
(
		lv_name_2_0=RULE_STRING
		{
			newLeafNode(lv_name_2_0, grammarAccess.getMetaDataDeclarationAccess().getNameSTRINGTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaDataDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup(), 1);
	 				}
					({true}?=>(	otherlv_3='@version' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMetaDataDeclarationAccess().getVersionKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaDataDeclarationAccess().getVersionVersionParserRuleCall_1_1_0()); 
	    }
		lv_version_4_0=ruleVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaDataDeclarationRule());
	        }
       		set(
       			$current, 
       			"version",
        		lv_version_4_0, 
        		"Version");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup(), 2);
	 				}
					({true}?=>(	otherlv_5='@description' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMetaDataDeclarationAccess().getDescriptionKeyword_2_0());
    }
(
(
		lv_description_6_0=RULE_STRING
		{
			newLeafNode(lv_description_6_0, grammarAccess.getMetaDataDeclarationAccess().getDescriptionSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaDataDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_6_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup(), 3);
	 				}
					({true}?=>(	otherlv_7='@author' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMetaDataDeclarationAccess().getAuthorKeyword_3_0());
    }
(
(
		lv_author_8_0=RULE_STRING
		{
			newLeafNode(lv_author_8_0, grammarAccess.getMetaDataDeclarationAccess().getAuthorSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaDataDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"author",
        		lv_author_8_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup(), 4);
	 				}
					({true}?=>(	otherlv_9='@email' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMetaDataDeclarationAccess().getEmailKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaDataDeclarationAccess().getEmailEmailParserRuleCall_4_1_0()); 
	    }
		lv_email_10_0=ruleEmail		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaDataDeclarationRule());
	        }
       		set(
       			$current, 
       			"email",
        		lv_email_10_0, 
        		"Email");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup(), 5);
	 				}
					({true}?=>(	otherlv_11='@organization' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getMetaDataDeclarationAccess().getOrganizationKeyword_5_0());
    }
(
(
		lv_organization_12_0=RULE_STRING
		{
			newLeafNode(lv_organization_12_0, grammarAccess.getMetaDataDeclarationAccess().getOrganizationSTRINGTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaDataDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"organization",
        		lv_organization_12_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup(), 6)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup(), 6);
	 				}
					({true}?=>(	otherlv_13='@publication' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getMetaDataDeclarationAccess().getPublicationKeyword_6_0());
    }
(
(
		lv_publication_14_0=RULE_STRING
		{
			newLeafNode(lv_publication_14_0, grammarAccess.getMetaDataDeclarationAccess().getPublicationSTRINGTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaDataDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"publication",
        		lv_publication_14_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup(), 7)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup(), 7);
	 				}
					({true}?=>(	otherlv_15='@date' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getMetaDataDeclarationAccess().getDateKeyword_7_0());
    }
(
(
		lv_date_16_0=RULE_STRING
		{
			newLeafNode(lv_date_16_0, grammarAccess.getMetaDataDeclarationAccess().getDateSTRINGTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaDataDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"date",
        		lv_date_16_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getMetaDataDeclarationAccess().getUnorderedGroup());
	}

)
;





// Entry rule entryRuleEmail
entryRuleEmail returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEmailRule()); }
	 iv_ruleEmail=ruleEmail 
	 { $current=$iv_ruleEmail.current; } 
	 EOF 
;

// Rule Email
ruleEmail returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getEmailAccess().getUsernameQualifiedNameParserRuleCall_0_0()); 
	    }
		lv_username_0_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEmailRule());
	        }
       		set(
       			$current, 
       			"username",
        		lv_username_0_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='@' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEmailAccess().getCommercialAtKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEmailAccess().getDomainQualifiedNameParserRuleCall_2_0()); 
	    }
		lv_domain_2_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEmailRule());
	        }
       		set(
       			$current, 
       			"domain",
        		lv_domain_2_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleVersion
entryRuleVersion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVersionRule()); }
	 iv_ruleVersion=ruleVersion 
	 { $current=$iv_ruleVersion.current; } 
	 EOF 
;

// Rule Version
ruleVersion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_main_0_0=RULE_INT
		{
			newLeafNode(lv_main_0_0, grammarAccess.getVersionAccess().getMainINTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVersionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"main",
        		lv_main_0_0, 
        		"INT");
	    }

)
)(	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVersionAccess().getFullStopKeyword_1_0());
    }
(
(
		lv_tail_2_0=RULE_INT
		{
			newLeafNode(lv_tail_2_0, grammarAccess.getVersionAccess().getTailINTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVersionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"tail",
        		lv_tail_2_0, 
        		"INT");
	    }

)
))*)
;





// Entry rule entryRuleRelationships
entryRuleRelationships returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationshipsRule()); }
	 iv_ruleRelationships=ruleRelationships 
	 { $current=$iv_ruleRelationships.current; } 
	 EOF 
;

// Rule Relationships
ruleRelationships returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Relationships:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRelationshipsAccess().getRelationshipsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationshipsAccess().getRootFeatureHierarchyParserRuleCall_1_0()); 
	    }
		lv_root_1_0=ruleFeatureHierarchy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationshipsRule());
	        }
       		set(
       			$current, 
       			"root",
        		lv_root_1_0, 
        		"FeatureHierarchy");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFeatureHierarchy
entryRuleFeatureHierarchy returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureHierarchyRule()); }
	 iv_ruleFeatureHierarchy=ruleFeatureHierarchy 
	 { $current=$iv_ruleFeatureHierarchy.current; } 
	 EOF 
;

// Rule FeatureHierarchy
ruleFeatureHierarchy returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureHierarchyAccess().getParentFeatureParserRuleCall_0_0()); 
	    }
		lv_parent_0_0=ruleFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureHierarchyRule());
	        }
       		set(
       			$current, 
       			"parent",
        		lv_parent_0_0, 
        		"Feature");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFeatureHierarchyAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureHierarchyAccess().getChildrenFeatureDefinitionParserRuleCall_2_0()); 
	    }
		lv_children_2_0=ruleFeatureDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureHierarchyRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_2_0, 
        		"FeatureDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFeatureHierarchyAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleFeatureDefinition
entryRuleFeatureDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureDefinitionRule()); }
	 iv_ruleFeatureDefinition=ruleFeatureDefinition 
	 { $current=$iv_ruleFeatureDefinition.current; } 
	 EOF 
;

// Rule FeatureDefinition
ruleFeatureDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFeatureDefinitionAccess().getFeatureParserRuleCall_0()); 
    }
    this_Feature_0=ruleFeature
    { 
        $current = $this_Feature_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFeatureDefinitionAccess().getFeaturesGroupParserRuleCall_1()); 
    }
    this_FeaturesGroup_1=ruleFeaturesGroup
    { 
        $current = $this_FeaturesGroup_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFeatureDefinitionAccess().getFeatureHierarchyParserRuleCall_2()); 
    }
    this_FeatureHierarchy_2=ruleFeatureHierarchy
    { 
        $current = $this_FeatureHierarchy_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFeature
entryRuleFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureRule()); }
	 iv_ruleFeature=ruleFeature 
	 { $current=$iv_ruleFeature.current; } 
	 EOF 
;

// Rule Feature
ruleFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
(
		lv_notTranslatable_0_1=	'@NT' 
    {
        newLeafNode(lv_notTranslatable_0_1, grammarAccess.getFeatureAccess().getNotTranslatableNTKeyword_0_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureRule());
	        }
       		setWithLastConsumed($current, "notTranslatable", true, null);
	    }

    |		lv_notTranslatable_0_2=	'@NotTranslatable' 
    {
        newLeafNode(lv_notTranslatable_0_2, grammarAccess.getFeatureAccess().getNotTranslatableNotTranslatableKeyword_0_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureRule());
	        }
       		setWithLastConsumed($current, "notTranslatable", true, null);
	    }

)

)
)?(
(
(
		lv_runTime_1_1=	'@RT' 
    {
        newLeafNode(lv_runTime_1_1, grammarAccess.getFeatureAccess().getRunTimeRTKeyword_0_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureRule());
	        }
       		setWithLastConsumed($current, "runTime", true, null);
	    }

    |		lv_runTime_1_2=	'@RunTime' 
    {
        newLeafNode(lv_runTime_1_2, grammarAccess.getFeatureAccess().getRunTimeRunTimeKeyword_0_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureRule());
	        }
       		setWithLastConsumed($current, "runTime", true, null);
	    }

)

)
)?(
(
(
		lv_notDecidable_2_1=	'@ND' 
    {
        newLeafNode(lv_notDecidable_2_1, grammarAccess.getFeatureAccess().getNotDecidableNDKeyword_0_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureRule());
	        }
       		setWithLastConsumed($current, "notDecidable", true, null);
	    }

    |		lv_notDecidable_2_2=	'@NotDecideable' 
    {
        newLeafNode(lv_notDecidable_2_2, grammarAccess.getFeatureAccess().getNotDecidableNotDecideableKeyword_0_2_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureRule());
	        }
       		setWithLastConsumed($current, "notDecidable", true, null);
	    }

)

)
)?)(
(
		lv_optional_3_0=	'?' 
    {
        newLeafNode(lv_optional_3_0, grammarAccess.getFeatureAccess().getOptionalQuestionMarkKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureRule());
	        }
       		setWithLastConsumed($current, "optional", true, "?");
	    }

)
)?((	otherlv_4='cloneBetween' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFeatureAccess().getCloneBetweenKeyword_2_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureAccess().getMinIntegerParserRuleCall_2_0_1_0()); 
	    }
		lv_min_5_0=ruleInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_5_0, 
        		"Integer");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='and' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFeatureAccess().getAndKeyword_2_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureAccess().getMaxIntegerParserRuleCall_2_0_3_0()); 
	    }
		lv_max_7_0=ruleInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureRule());
	        }
       		set(
       			$current, 
       			"max",
        		lv_max_7_0, 
        		"Integer");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_8='[' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getFeatureAccess().getLeftSquareBracketKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureAccess().getMinIntegerParserRuleCall_2_1_1_0()); 
	    }
		lv_min_9_0=ruleInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_9_0, 
        		"Integer");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='..' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getFeatureAccess().getFullStopFullStopKeyword_2_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureAccess().getMaxIntegerParserRuleCall_2_1_3_0()); 
	    }
		lv_max_11_0=ruleInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureRule());
	        }
       		set(
       			$current, 
       			"max",
        		lv_max_11_0, 
        		"Integer");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12=']' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getFeatureAccess().getRightSquareBracketKeyword_2_1_4());
    }
))?(
(
		lv_name_13_0=RULE_ID
		{
			newLeafNode(lv_name_13_0, grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_13_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleFeaturesGroup
entryRuleFeaturesGroup returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeaturesGroupRule()); }
	 iv_ruleFeaturesGroup=ruleFeaturesGroup 
	 { $current=$iv_ruleFeaturesGroup.current; } 
	 EOF 
;

// Rule FeaturesGroup
ruleFeaturesGroup returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFeaturesGroupAccess().getXorgroupParserRuleCall_0()); 
    }
    this_Xorgroup_0=ruleXorgroup
    { 
        $current = $this_Xorgroup_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFeaturesGroupAccess().getOrgroupParserRuleCall_1()); 
    }
    this_Orgroup_1=ruleOrgroup
    { 
        $current = $this_Orgroup_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFeaturesGroupAccess().getCardinalityBasedParserRuleCall_2()); 
    }
    this_CardinalityBased_2=ruleCardinalityBased
    { 
        $current = $this_CardinalityBased_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXorgroup
entryRuleXorgroup returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXorgroupRule()); }
	 iv_ruleXorgroup=ruleXorgroup 
	 { $current=$iv_ruleXorgroup.current; } 
	 EOF 
;

// Rule Xorgroup
ruleXorgroup returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='oneOf' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXorgroupAccess().getOneOfKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXorgroupAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getXorgroupAccess().getGroupedFeaturesFeatureParserRuleCall_2_0_0()); 
	    }
		lv_groupedFeatures_2_1=ruleFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXorgroupRule());
	        }
       		add(
       			$current, 
       			"groupedFeatures",
        		lv_groupedFeatures_2_1, 
        		"Feature");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getXorgroupAccess().getGroupedFeaturesFeatureHierarchyParserRuleCall_2_0_1()); 
	    }
		lv_groupedFeatures_2_2=ruleFeatureHierarchy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXorgroupRule());
	        }
       		add(
       			$current, 
       			"groupedFeatures",
        		lv_groupedFeatures_2_2, 
        		"FeatureHierarchy");
	        afterParserOrEnumRuleCall();
	    }

)

)
)(
(
(
		{ 
	        newCompositeNode(grammarAccess.getXorgroupAccess().getGroupedFeaturesFeatureParserRuleCall_3_0_0()); 
	    }
		lv_groupedFeatures_3_1=ruleFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXorgroupRule());
	        }
       		add(
       			$current, 
       			"groupedFeatures",
        		lv_groupedFeatures_3_1, 
        		"Feature");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getXorgroupAccess().getGroupedFeaturesFeatureHierarchyParserRuleCall_3_0_1()); 
	    }
		lv_groupedFeatures_3_2=ruleFeatureHierarchy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXorgroupRule());
	        }
       		add(
       			$current, 
       			"groupedFeatures",
        		lv_groupedFeatures_3_2, 
        		"FeatureHierarchy");
	        afterParserOrEnumRuleCall();
	    }

)

)
)+	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXorgroupAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleOrgroup
entryRuleOrgroup returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrgroupRule()); }
	 iv_ruleOrgroup=ruleOrgroup 
	 { $current=$iv_ruleOrgroup.current; } 
	 EOF 
;

// Rule Orgroup
ruleOrgroup returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='someOf' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOrgroupAccess().getSomeOfKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOrgroupAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrgroupAccess().getGroupedFeaturesFeatureParserRuleCall_2_0_0()); 
	    }
		lv_groupedFeatures_2_1=ruleFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrgroupRule());
	        }
       		add(
       			$current, 
       			"groupedFeatures",
        		lv_groupedFeatures_2_1, 
        		"Feature");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getOrgroupAccess().getGroupedFeaturesFeatureHierarchyParserRuleCall_2_0_1()); 
	    }
		lv_groupedFeatures_2_2=ruleFeatureHierarchy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrgroupRule());
	        }
       		add(
       			$current, 
       			"groupedFeatures",
        		lv_groupedFeatures_2_2, 
        		"FeatureHierarchy");
	        afterParserOrEnumRuleCall();
	    }

)

)
)(
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrgroupAccess().getGroupedFeaturesFeatureParserRuleCall_3_0_0()); 
	    }
		lv_groupedFeatures_3_1=ruleFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrgroupRule());
	        }
       		add(
       			$current, 
       			"groupedFeatures",
        		lv_groupedFeatures_3_1, 
        		"Feature");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getOrgroupAccess().getGroupedFeaturesFeatureHierarchyParserRuleCall_3_0_1()); 
	    }
		lv_groupedFeatures_3_2=ruleFeatureHierarchy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrgroupRule());
	        }
       		add(
       			$current, 
       			"groupedFeatures",
        		lv_groupedFeatures_3_2, 
        		"FeatureHierarchy");
	        afterParserOrEnumRuleCall();
	    }

)

)
)+	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOrgroupAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleCardinalityBased
entryRuleCardinalityBased returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCardinalityBasedRule()); }
	 iv_ruleCardinalityBased=ruleCardinalityBased 
	 { $current=$iv_ruleCardinalityBased.current; } 
	 EOF 
;

// Rule CardinalityBased
ruleCardinalityBased returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	otherlv_0='someBetween' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCardinalityBasedAccess().getSomeBetweenKeyword_0_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCardinalityBasedAccess().getMinIntegerParserRuleCall_0_0_1_0()); 
	    }
		lv_min_1_0=ruleInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCardinalityBasedRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_1_0, 
        		"Integer");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='and' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCardinalityBasedAccess().getAndKeyword_0_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCardinalityBasedAccess().getMaxIntegerParserRuleCall_0_0_3_0()); 
	    }
		lv_max_3_0=ruleInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCardinalityBasedRule());
	        }
       		set(
       			$current, 
       			"max",
        		lv_max_3_0, 
        		"Integer");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCardinalityBasedAccess().getLeftSquareBracketKeyword_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCardinalityBasedAccess().getMinIntegerParserRuleCall_0_1_1_0()); 
	    }
		lv_min_5_0=ruleInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCardinalityBasedRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_5_0, 
        		"Integer");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='..' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCardinalityBasedAccess().getFullStopFullStopKeyword_0_1_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCardinalityBasedAccess().getMaxIntegerParserRuleCall_0_1_3_0_0()); 
	    }
		lv_max_7_0=ruleInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCardinalityBasedRule());
	        }
       		set(
       			$current, 
       			"max",
        		lv_max_7_0, 
        		"Integer");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_all_8_0=	'*' 
    {
        newLeafNode(lv_all_8_0, grammarAccess.getCardinalityBasedAccess().getAllAsteriskKeyword_0_1_3_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCardinalityBasedRule());
	        }
       		setWithLastConsumed($current, "all", true, "*");
	    }

)
))	otherlv_9=']' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCardinalityBasedAccess().getRightSquareBracketKeyword_0_1_4());
    }
))	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getCardinalityBasedAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getCardinalityBasedAccess().getGroupedFeaturesFeatureParserRuleCall_2_0_0()); 
	    }
		lv_groupedFeatures_11_1=ruleFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCardinalityBasedRule());
	        }
       		add(
       			$current, 
       			"groupedFeatures",
        		lv_groupedFeatures_11_1, 
        		"Feature");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getCardinalityBasedAccess().getGroupedFeaturesFeatureHierarchyParserRuleCall_2_0_1()); 
	    }
		lv_groupedFeatures_11_2=ruleFeatureHierarchy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCardinalityBasedRule());
	        }
       		add(
       			$current, 
       			"groupedFeatures",
        		lv_groupedFeatures_11_2, 
        		"FeatureHierarchy");
	        afterParserOrEnumRuleCall();
	    }

)

)
)(
(
(
		{ 
	        newCompositeNode(grammarAccess.getCardinalityBasedAccess().getGroupedFeaturesFeatureParserRuleCall_3_0_0()); 
	    }
		lv_groupedFeatures_12_1=ruleFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCardinalityBasedRule());
	        }
       		add(
       			$current, 
       			"groupedFeatures",
        		lv_groupedFeatures_12_1, 
        		"Feature");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getCardinalityBasedAccess().getGroupedFeaturesFeatureHierarchyParserRuleCall_3_0_1()); 
	    }
		lv_groupedFeatures_12_2=ruleFeatureHierarchy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCardinalityBasedRule());
	        }
       		add(
       			$current, 
       			"groupedFeatures",
        		lv_groupedFeatures_12_2, 
        		"FeatureHierarchy");
	        afterParserOrEnumRuleCall();
	    }

)

)
)+	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getCardinalityBasedAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleAttributes
entryRuleAttributes returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributesRule()); }
	 iv_ruleAttributes=ruleAttributes 
	 { $current=$iv_ruleAttributes.current; } 
	 EOF 
;

// Rule Attributes
ruleAttributes returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Attributes:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributesAccess().getAttributesKeyword_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getAttributesAccess().getAttrDefsAttrDefParserRuleCall_1_0_0()); 
	    }
		lv_attrDefs_1_0=ruleAttrDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributesRule());
	        }
       		add(
       			$current, 
       			"attrDefs",
        		lv_attrDefs_1_0, 
        		"AttrDef");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributesAccess().getAttrValuationsBasicAttrValuationParserRuleCall_1_1_0()); 
	    }
		lv_attrValuations_2_0=ruleBasicAttrValuation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributesRule());
	        }
       		add(
       			$current, 
       			"attrValuations",
        		lv_attrValuations_2_0, 
        		"BasicAttrValuation");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
;





// Entry rule entryRuleAttrDef
entryRuleAttrDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttrDefRule()); }
	 iv_ruleAttrDef=ruleAttrDef 
	 { $current=$iv_ruleAttrDef.current; } 
	 EOF 
;

// Rule AttrDef
ruleAttrDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
(
		lv_notTranslatable_0_1=	'@NT' 
    {
        newLeafNode(lv_notTranslatable_0_1, grammarAccess.getAttrDefAccess().getNotTranslatableNTKeyword_0_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttrDefRule());
	        }
       		setWithLastConsumed($current, "notTranslatable", true, null);
	    }

    |		lv_notTranslatable_0_2=	'@NotTranslatable' 
    {
        newLeafNode(lv_notTranslatable_0_2, grammarAccess.getAttrDefAccess().getNotTranslatableNotTranslatableKeyword_0_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttrDefRule());
	        }
       		setWithLastConsumed($current, "notTranslatable", true, null);
	    }

)

)
)?(
(
(
		lv_runTime_1_1=	'@RT' 
    {
        newLeafNode(lv_runTime_1_1, grammarAccess.getAttrDefAccess().getRunTimeRTKeyword_0_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttrDefRule());
	        }
       		setWithLastConsumed($current, "runTime", true, null);
	    }

    |		lv_runTime_1_2=	'@RunTime' 
    {
        newLeafNode(lv_runTime_1_2, grammarAccess.getAttrDefAccess().getRunTimeRunTimeKeyword_0_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttrDefRule());
	        }
       		setWithLastConsumed($current, "runTime", true, null);
	    }

)

)
)?(
(
(
		lv_notDecidable_2_1=	'@ND' 
    {
        newLeafNode(lv_notDecidable_2_1, grammarAccess.getAttrDefAccess().getNotDecidableNDKeyword_0_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttrDefRule());
	        }
       		setWithLastConsumed($current, "notDecidable", true, null);
	    }

    |		lv_notDecidable_2_2=	'@NotDecideable' 
    {
        newLeafNode(lv_notDecidable_2_2, grammarAccess.getAttrDefAccess().getNotDecidableNotDecideableKeyword_0_2_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttrDefRule());
	        }
       		setWithLastConsumed($current, "notDecidable", true, null);
	    }

)

)
)?)((
(
		{ 
	        newCompositeNode(grammarAccess.getAttrDefAccess().getBasicAttrDefBasicAttrDefParserRuleCall_1_0_0()); 
	    }
		lv_basicAttrDef_3_0=ruleBasicAttrDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttrDefRule());
	        }
       		set(
       			$current, 
       			"basicAttrDef",
        		lv_basicAttrDef_3_0, 
        		"BasicAttrDef");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAttrDefAccess().getEnumAttrDefEnumAttrDefParserRuleCall_1_1_0()); 
	    }
		lv_enumAttrDef_4_0=ruleEnumAttrDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttrDefRule());
	        }
       		set(
       			$current, 
       			"enumAttrDef",
        		lv_enumAttrDef_4_0, 
        		"EnumAttrDef");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleBasicAttrDef
entryRuleBasicAttrDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBasicAttrDefRule()); }
	 iv_ruleBasicAttrDef=ruleBasicAttrDef 
	 { $current=$iv_ruleBasicAttrDef.current; } 
	 EOF 
;

// Rule BasicAttrDef
ruleBasicAttrDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBasicAttrDefAccess().getBooleanAttrDefParserRuleCall_0()); 
    }
    this_BooleanAttrDef_0=ruleBooleanAttrDef
    { 
        $current = $this_BooleanAttrDef_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBasicAttrDefAccess().getStringAttrDefParserRuleCall_1()); 
    }
    this_StringAttrDef_1=ruleStringAttrDef
    { 
        $current = $this_StringAttrDef_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBasicAttrDefAccess().getIntegerAttrDefParserRuleCall_2()); 
    }
    this_IntegerAttrDef_2=ruleIntegerAttrDef
    { 
        $current = $this_IntegerAttrDef_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBasicAttrDefAccess().getRealAttrDefParserRuleCall_3()); 
    }
    this_RealAttrDef_3=ruleRealAttrDef
    { 
        $current = $this_RealAttrDef_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBooleanAttrDef
entryRuleBooleanAttrDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanAttrDefRule()); }
	 iv_ruleBooleanAttrDef=ruleBooleanAttrDef 
	 { $current=$iv_ruleBooleanAttrDef.current; } 
	 EOF 
;

// Rule BooleanAttrDef
ruleBooleanAttrDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='boolean' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBooleanAttrDefAccess().getBooleanKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanAttrDefAccess().getNameBoolean_ATT_IDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleBoolean_ATT_ID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanAttrDefRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Boolean_ATT_ID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBooleanAttrDefAccess().getEqualsSignKeyword_2_0());
    }
(
(
(
		lv_value_3_1=	'true' 
    {
        newLeafNode(lv_value_3_1, grammarAccess.getBooleanAttrDefAccess().getValueTrueKeyword_2_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanAttrDefRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_3_1, null);
	    }

    |		lv_value_3_2=	'false' 
    {
        newLeafNode(lv_value_3_2, grammarAccess.getBooleanAttrDefAccess().getValueFalseKeyword_2_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanAttrDefRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_3_2, null);
	    }

)

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanAttrDefAccess().getDefaultBoolDefaultDefParserRuleCall_3_0()); 
	    }
		lv_default_4_0=ruleBoolDefaultDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanAttrDefRule());
	        }
       		set(
       			$current, 
       			"default",
        		lv_default_4_0, 
        		"BoolDefaultDef");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleStringAttrDef
entryRuleStringAttrDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringAttrDefRule()); }
	 iv_ruleStringAttrDef=ruleStringAttrDef 
	 { $current=$iv_ruleStringAttrDef.current; } 
	 EOF 
;

// Rule StringAttrDef
ruleStringAttrDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='string' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStringAttrDefAccess().getStringKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStringAttrDefAccess().getNameString_ATT_IDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleString_ATT_ID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringAttrDefRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"String_ATT_ID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStringAttrDefAccess().getEqualsSignKeyword_2_0());
    }
(
(
		lv_value_3_0=RULE_STRING
		{
			newLeafNode(lv_value_3_0, grammarAccess.getStringAttrDefAccess().getValueSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringAttrDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getStringAttrDefAccess().getDefaultStringDefaultDefParserRuleCall_3_0()); 
	    }
		lv_default_4_0=ruleStringDefaultDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringAttrDefRule());
	        }
       		set(
       			$current, 
       			"default",
        		lv_default_4_0, 
        		"StringDefaultDef");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleIntegerAttrDef
entryRuleIntegerAttrDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerAttrDefRule()); }
	 iv_ruleIntegerAttrDef=ruleIntegerAttrDef 
	 { $current=$iv_ruleIntegerAttrDef.current; } 
	 EOF 
;

// Rule IntegerAttrDef
ruleIntegerAttrDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getIntegerAttrDefAccess().getIntegerAttrDefBoundedParserRuleCall_0()); 
    }
    this_IntegerAttrDefBounded_0=ruleIntegerAttrDefBounded
    { 
        $current = $this_IntegerAttrDefBounded_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getIntegerAttrDefAccess().getIntegerAttrDefUnboundedParserRuleCall_1()); 
    }
    this_IntegerAttrDefUnbounded_1=ruleIntegerAttrDefUnbounded
    { 
        $current = $this_IntegerAttrDefUnbounded_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleIntegerAttrDefBounded
entryRuleIntegerAttrDefBounded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerAttrDefBoundedRule()); }
	 iv_ruleIntegerAttrDefBounded=ruleIntegerAttrDefBounded 
	 { $current=$iv_ruleIntegerAttrDefBounded.current; } 
	 EOF 
;

// Rule IntegerAttrDefBounded
ruleIntegerAttrDefBounded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='int' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntegerAttrDefBoundedAccess().getIntKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerAttrDefBoundedAccess().getNameInteger_ATT_IDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleInteger_ATT_ID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerAttrDefBoundedRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Integer_ATT_ID");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerAttrDefBoundedAccess().getComplementsIntegerAttrDefComplementParserRuleCall_2_0_0()); 
	    }
		lv_complements_2_0=ruleIntegerAttrDefComplement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerAttrDefBoundedRule());
	        }
       		add(
       			$current, 
       			"complements",
        		lv_complements_2_0, 
        		"IntegerAttrDefComplement");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerAttrDefBoundedAccess().getComplementIntegerAttrDefComplementParserRuleCall_2_1_0()); 
	    }
		lv_complement_3_0=ruleIntegerAttrDefComplement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerAttrDefBoundedRule());
	        }
       		add(
       			$current, 
       			"complement",
        		lv_complement_3_0, 
        		"IntegerAttrDefComplement");
	        afterParserOrEnumRuleCall();
	    }

)
)*)(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerAttrDefBoundedAccess().getDefaultIntegerDefaultDefParserRuleCall_3_0()); 
	    }
		lv_default_4_0=ruleIntegerDefaultDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerAttrDefBoundedRule());
	        }
       		set(
       			$current, 
       			"default",
        		lv_default_4_0, 
        		"IntegerDefaultDef");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleIntegerAttrDefComplement
entryRuleIntegerAttrDefComplement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerAttrDefComplementRule()); }
	 iv_ruleIntegerAttrDefComplement=ruleIntegerAttrDefComplement 
	 { $current=$iv_ruleIntegerAttrDefComplement.current; } 
	 EOF 
;

// Rule IntegerAttrDefComplement
ruleIntegerAttrDefComplement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntegerAttrDefComplementAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerAttrDefComplementAccess().getMinIntegerParserRuleCall_1_0()); 
	    }
		lv_min_1_0=ruleInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerAttrDefComplementRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_1_0, 
        		"Integer");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='..' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIntegerAttrDefComplementAccess().getFullStopFullStopKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerAttrDefComplementAccess().getMaxIntegerParserRuleCall_3_0()); 
	    }
		lv_max_3_0=ruleInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerAttrDefComplementRule());
	        }
       		set(
       			$current, 
       			"max",
        		lv_max_3_0, 
        		"Integer");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIntegerAttrDefComplementAccess().getRightSquareBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerAttrDefComplementAccess().getDeltaIntegerDeltaDefParserRuleCall_5_0()); 
	    }
		lv_delta_5_0=ruleIntegerDeltaDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerAttrDefComplementRule());
	        }
       		set(
       			$current, 
       			"delta",
        		lv_delta_5_0, 
        		"IntegerDeltaDef");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleIntegerAttrDefUnbounded
entryRuleIntegerAttrDefUnbounded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerAttrDefUnboundedRule()); }
	 iv_ruleIntegerAttrDefUnbounded=ruleIntegerAttrDefUnbounded 
	 { $current=$iv_ruleIntegerAttrDefUnbounded.current; } 
	 EOF 
;

// Rule IntegerAttrDefUnbounded
ruleIntegerAttrDefUnbounded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='int' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntegerAttrDefUnboundedAccess().getIntKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerAttrDefUnboundedAccess().getNameInteger_ATT_IDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleInteger_ATT_ID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerAttrDefUnboundedRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Integer_ATT_ID");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIntegerAttrDefUnboundedAccess().getEqualsSignKeyword_2_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerAttrDefUnboundedAccess().getValueIntegerParserRuleCall_2_0_1_0()); 
	    }
		lv_value_3_0=ruleInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerAttrDefUnboundedRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"Integer");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerAttrDefUnboundedAccess().getDefaultIntegerDefaultDefParserRuleCall_2_1_0()); 
	    }
		lv_default_4_0=ruleIntegerDefaultDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerAttrDefUnboundedRule());
	        }
       		set(
       			$current, 
       			"default",
        		lv_default_4_0, 
        		"IntegerDefaultDef");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleRealAttrDef
entryRuleRealAttrDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealAttrDefRule()); }
	 iv_ruleRealAttrDef=ruleRealAttrDef 
	 { $current=$iv_ruleRealAttrDef.current; } 
	 EOF 
;

// Rule RealAttrDef
ruleRealAttrDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRealAttrDefAccess().getRealAttrDefBoundedParserRuleCall_0()); 
    }
    this_RealAttrDefBounded_0=ruleRealAttrDefBounded
    { 
        $current = $this_RealAttrDefBounded_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRealAttrDefAccess().getRealAttrDefUnboundedParserRuleCall_1()); 
    }
    this_RealAttrDefUnbounded_1=ruleRealAttrDefUnbounded
    { 
        $current = $this_RealAttrDefUnbounded_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRealAttrDefBounded
entryRuleRealAttrDefBounded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealAttrDefBoundedRule()); }
	 iv_ruleRealAttrDefBounded=ruleRealAttrDefBounded 
	 { $current=$iv_ruleRealAttrDefBounded.current; } 
	 EOF 
;

// Rule RealAttrDefBounded
ruleRealAttrDefBounded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='real' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRealAttrDefBoundedAccess().getRealKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRealAttrDefBoundedAccess().getNameReal_ATT_IDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleReal_ATT_ID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealAttrDefBoundedRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Real_ATT_ID");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getRealAttrDefBoundedAccess().getComplementRealAttrDefComplementParserRuleCall_2_0_0()); 
	    }
		lv_complement_2_0=ruleRealAttrDefComplement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealAttrDefBoundedRule());
	        }
       		add(
       			$current, 
       			"complement",
        		lv_complement_2_0, 
        		"RealAttrDefComplement");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRealAttrDefBoundedAccess().getComplementRealAttrDefComplementParserRuleCall_2_1_0()); 
	    }
		lv_complement_3_0=ruleRealAttrDefComplement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealAttrDefBoundedRule());
	        }
       		add(
       			$current, 
       			"complement",
        		lv_complement_3_0, 
        		"RealAttrDefComplement");
	        afterParserOrEnumRuleCall();
	    }

)
)*)(
(
		{ 
	        newCompositeNode(grammarAccess.getRealAttrDefBoundedAccess().getDefaultRealDefaultDefParserRuleCall_3_0()); 
	    }
		lv_default_4_0=ruleRealDefaultDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealAttrDefBoundedRule());
	        }
       		set(
       			$current, 
       			"default",
        		lv_default_4_0, 
        		"RealDefaultDef");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleRealAttrDefComplement
entryRuleRealAttrDefComplement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealAttrDefComplementRule()); }
	 iv_ruleRealAttrDefComplement=ruleRealAttrDefComplement 
	 { $current=$iv_ruleRealAttrDefComplement.current; } 
	 EOF 
;

// Rule RealAttrDefComplement
ruleRealAttrDefComplement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRealAttrDefComplementAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRealAttrDefComplementAccess().getMinRealParserRuleCall_1_0()); 
	    }
		lv_min_1_0=ruleReal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealAttrDefComplementRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_1_0, 
        		"Real");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='..' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRealAttrDefComplementAccess().getFullStopFullStopKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRealAttrDefComplementAccess().getMaxRealParserRuleCall_3_0()); 
	    }
		lv_max_3_0=ruleReal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealAttrDefComplementRule());
	        }
       		set(
       			$current, 
       			"max",
        		lv_max_3_0, 
        		"Real");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRealAttrDefComplementAccess().getRightSquareBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRealAttrDefComplementAccess().getDeltaRealDeltaDefParserRuleCall_5_0()); 
	    }
		lv_delta_5_0=ruleRealDeltaDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealAttrDefComplementRule());
	        }
       		set(
       			$current, 
       			"delta",
        		lv_delta_5_0, 
        		"RealDeltaDef");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleRealAttrDefUnbounded
entryRuleRealAttrDefUnbounded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealAttrDefUnboundedRule()); }
	 iv_ruleRealAttrDefUnbounded=ruleRealAttrDefUnbounded 
	 { $current=$iv_ruleRealAttrDefUnbounded.current; } 
	 EOF 
;

// Rule RealAttrDefUnbounded
ruleRealAttrDefUnbounded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='real' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRealAttrDefUnboundedAccess().getRealKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRealAttrDefUnboundedAccess().getNameReal_ATT_IDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleReal_ATT_ID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealAttrDefUnboundedRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Real_ATT_ID");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRealAttrDefUnboundedAccess().getEqualsSignKeyword_2_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRealAttrDefUnboundedAccess().getValueRealParserRuleCall_2_0_1_0()); 
	    }
		lv_value_3_0=ruleReal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealAttrDefUnboundedRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"Real");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getRealAttrDefUnboundedAccess().getDefaultRealDefaultDefParserRuleCall_2_1_0()); 
	    }
		lv_default_4_0=ruleRealDefaultDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealAttrDefUnboundedRule());
	        }
       		set(
       			$current, 
       			"default",
        		lv_default_4_0, 
        		"RealDefaultDef");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleEnumAttrDef
entryRuleEnumAttrDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumAttrDefRule()); }
	 iv_ruleEnumAttrDef=ruleEnumAttrDef 
	 { $current=$iv_ruleEnumAttrDef.current; } 
	 EOF 
;

// Rule EnumAttrDef
ruleEnumAttrDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getEnumAttrDefAccess().getEnumIntegerDefParserRuleCall_0()); 
    }
    this_EnumIntegerDef_0=ruleEnumIntegerDef
    { 
        $current = $this_EnumIntegerDef_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getEnumAttrDefAccess().getEnumStringDefParserRuleCall_1()); 
    }
    this_EnumStringDef_1=ruleEnumStringDef
    { 
        $current = $this_EnumStringDef_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getEnumAttrDefAccess().getEnumRealDefParserRuleCall_2()); 
    }
    this_EnumRealDef_2=ruleEnumRealDef
    { 
        $current = $this_EnumRealDef_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleEnumStringDef
entryRuleEnumStringDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumStringDefRule()); }
	 iv_ruleEnumStringDef=ruleEnumStringDef 
	 { $current=$iv_ruleEnumStringDef.current; } 
	 EOF 
;

// Rule EnumStringDef
ruleEnumStringDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='enum' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEnumStringDefAccess().getEnumKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumStringDefAccess().getNameEnum_String_ATT_IDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEnum_String_ATT_ID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumStringDefRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Enum_String_ATT_ID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnumStringDefAccess().getLeftSquareBracketKeyword_2());
    }
(
(
		lv_value_3_0=RULE_STRING
		{
			newLeafNode(lv_value_3_0, grammarAccess.getEnumStringDefAccess().getValueSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumStringDefRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"STRING");
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEnumStringDefAccess().getCommaKeyword_4_0());
    }
(
(
		lv_value_5_0=RULE_STRING
		{
			newLeafNode(lv_value_5_0, grammarAccess.getEnumStringDefAccess().getValueSTRINGTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumStringDefRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"STRING");
	    }

)
))+	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEnumStringDefAccess().getRightSquareBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumStringDefAccess().getDefaultStringDefaultDefParserRuleCall_6_0()); 
	    }
		lv_default_7_0=ruleStringDefaultDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumStringDefRule());
	        }
       		set(
       			$current, 
       			"default",
        		lv_default_7_0, 
        		"StringDefaultDef");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleEnumIntegerDef
entryRuleEnumIntegerDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumIntegerDefRule()); }
	 iv_ruleEnumIntegerDef=ruleEnumIntegerDef 
	 { $current=$iv_ruleEnumIntegerDef.current; } 
	 EOF 
;

// Rule EnumIntegerDef
ruleEnumIntegerDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='enum' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEnumIntegerDefAccess().getEnumKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumIntegerDefAccess().getNameEnum_Integer_ATT_IDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEnum_Integer_ATT_ID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumIntegerDefRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Enum_Integer_ATT_ID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnumIntegerDefAccess().getLeftSquareBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumIntegerDefAccess().getValueIntegerParserRuleCall_3_0()); 
	    }
		lv_value_3_0=ruleInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumIntegerDefRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"Integer");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEnumIntegerDefAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumIntegerDefAccess().getValueIntegerParserRuleCall_4_1_0()); 
	    }
		lv_value_5_0=ruleInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumIntegerDefRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"Integer");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEnumIntegerDefAccess().getRightSquareBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumIntegerDefAccess().getDefaultIntegerDefaultDefParserRuleCall_6_0()); 
	    }
		lv_default_7_0=ruleIntegerDefaultDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumIntegerDefRule());
	        }
       		set(
       			$current, 
       			"default",
        		lv_default_7_0, 
        		"IntegerDefaultDef");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleEnumRealDef
entryRuleEnumRealDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumRealDefRule()); }
	 iv_ruleEnumRealDef=ruleEnumRealDef 
	 { $current=$iv_ruleEnumRealDef.current; } 
	 EOF 
;

// Rule EnumRealDef
ruleEnumRealDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='enum' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEnumRealDefAccess().getEnumKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumRealDefAccess().getNameEnum_Real_ATT_IDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEnum_Real_ATT_ID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumRealDefRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Enum_Real_ATT_ID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnumRealDefAccess().getLeftSquareBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumRealDefAccess().getValueRealParserRuleCall_3_0()); 
	    }
		lv_value_3_0=ruleReal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumRealDefRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"Real");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEnumRealDefAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumRealDefAccess().getValueRealParserRuleCall_4_1_0()); 
	    }
		lv_value_5_0=ruleReal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumRealDefRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"Real");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEnumRealDefAccess().getRightSquareBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumRealDefAccess().getDefaultRealDefaultDefParserRuleCall_6_0()); 
	    }
		lv_default_7_0=ruleRealDefaultDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumRealDefRule());
	        }
       		set(
       			$current, 
       			"default",
        		lv_default_7_0, 
        		"RealDefaultDef");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleBoolDefaultDef
entryRuleBoolDefaultDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoolDefaultDefRule()); }
	 iv_ruleBoolDefaultDef=ruleBoolDefaultDef 
	 { $current=$iv_ruleBoolDefaultDef.current; } 
	 EOF 
;

// Rule BoolDefaultDef
ruleBoolDefaultDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='default' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBoolDefaultDefAccess().getDefaultKeyword_0());
    }
(
(
(
		lv_value_1_1=	'true' 
    {
        newLeafNode(lv_value_1_1, grammarAccess.getBoolDefaultDefAccess().getValueTrueKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBoolDefaultDefRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_1_1, null);
	    }

    |		lv_value_1_2=	'false' 
    {
        newLeafNode(lv_value_1_2, grammarAccess.getBoolDefaultDefAccess().getValueFalseKeyword_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBoolDefaultDefRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_1_2, null);
	    }

)

)
))
;





// Entry rule entryRuleStringDefaultDef
entryRuleStringDefaultDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringDefaultDefRule()); }
	 iv_ruleStringDefaultDef=ruleStringDefaultDef 
	 { $current=$iv_ruleStringDefaultDef.current; } 
	 EOF 
;

// Rule StringDefaultDef
ruleStringDefaultDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='default' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStringDefaultDefAccess().getDefaultKeyword_0());
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getStringDefaultDefAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringDefaultDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleIntegerDeltaDef
entryRuleIntegerDeltaDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerDeltaDefRule()); }
	 iv_ruleIntegerDeltaDef=ruleIntegerDeltaDef 
	 { $current=$iv_ruleIntegerDeltaDef.current; } 
	 EOF 
;

// Rule IntegerDeltaDef
ruleIntegerDeltaDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='delta' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntegerDeltaDefAccess().getDeltaKeyword_0());
    }
(
(
		lv_value_1_0=RULE_INT
		{
			newLeafNode(lv_value_1_0, grammarAccess.getIntegerDeltaDefAccess().getValueINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerDeltaDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleIntegerDefaultDef
entryRuleIntegerDefaultDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerDefaultDefRule()); }
	 iv_ruleIntegerDefaultDef=ruleIntegerDefaultDef 
	 { $current=$iv_ruleIntegerDefaultDef.current; } 
	 EOF 
;

// Rule IntegerDefaultDef
ruleIntegerDefaultDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='default' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntegerDefaultDefAccess().getDefaultKeyword_0());
    }
(
(
		lv_value_1_0=RULE_INT
		{
			newLeafNode(lv_value_1_0, grammarAccess.getIntegerDefaultDefAccess().getValueINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerDefaultDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleRealDeltaDef
entryRuleRealDeltaDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealDeltaDefRule()); }
	 iv_ruleRealDeltaDef=ruleRealDeltaDef 
	 { $current=$iv_ruleRealDeltaDef.current; } 
	 EOF 
;

// Rule RealDeltaDef
ruleRealDeltaDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='delta' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRealDeltaDefAccess().getDeltaKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRealDeltaDefAccess().getValueRealParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleReal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealDeltaDefRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"Real");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRealDefaultDef
entryRuleRealDefaultDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealDefaultDefRule()); }
	 iv_ruleRealDefaultDef=ruleRealDefaultDef 
	 { $current=$iv_ruleRealDefaultDef.current; } 
	 EOF 
;

// Rule RealDefaultDef
ruleRealDefaultDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='default' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRealDefaultDefAccess().getDefaultKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRealDefaultDefAccess().getValueRealParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleReal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealDefaultDefRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"Real");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDescriptions
entryRuleDescriptions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDescriptionsRule()); }
	 iv_ruleDescriptions=ruleDescriptions 
	 { $current=$iv_ruleDescriptions.current; } 
	 EOF 
;

// Rule Descriptions
ruleDescriptions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Descriptions:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDescriptionsAccess().getDescriptionsKeyword_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getDescriptionsAccess().getFeaturesDescriptionsFeatureDescriptionParserRuleCall_1_0_0()); 
	    }
		lv_featuresDescriptions_1_0=ruleFeatureDescription		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDescriptionsRule());
	        }
       		add(
       			$current, 
       			"featuresDescriptions",
        		lv_featuresDescriptions_1_0, 
        		"FeatureDescription");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getDescriptionsAccess().getAttributesDescriptionsAttributeDescriptionParserRuleCall_1_1_0()); 
	    }
		lv_attributesDescriptions_2_0=ruleAttributeDescription		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDescriptionsRule());
	        }
       		add(
       			$current, 
       			"attributesDescriptions",
        		lv_attributesDescriptions_2_0, 
        		"AttributeDescription");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
;





// Entry rule entryRuleFeatureDescription
entryRuleFeatureDescription returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureDescriptionRule()); }
	 iv_ruleFeatureDescription=ruleFeatureDescription 
	 { $current=$iv_ruleFeatureDescription.current; } 
	 EOF 
;

// Rule FeatureDescription
ruleFeatureDescription returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='feat' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFeatureDescriptionAccess().getFeatKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureDescriptionRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getFeatureDescriptionAccess().getRefFeatFeatureCrossReference_1_0()); 
	}

)
)	otherlv_2='is' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFeatureDescriptionAccess().getIsKeyword_2());
    }
(
(
		lv_description_3_0=RULE_STRING
		{
			newLeafNode(lv_description_3_0, grammarAccess.getFeatureDescriptionAccess().getDescriptionSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureDescriptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleAttributeDescription
entryRuleAttributeDescription returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeDescriptionRule()); }
	 iv_ruleAttributeDescription=ruleAttributeDescription 
	 { $current=$iv_ruleAttributeDescription.current; } 
	 EOF 
;

// Rule AttributeDescription
ruleAttributeDescription returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='att' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributeDescriptionAccess().getAttKeyword_0());
    }
(	otherlv_1='*.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAttributeDescriptionAccess().getAsteriskFullStopKeyword_1_0());
    }

    |((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeDescriptionRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getAttributeDescriptionAccess().getRefFeatFeatureCrossReference_1_1_0_0()); 
	}

)
)	otherlv_3='.' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAttributeDescriptionAccess().getFullStopKeyword_1_1_1());
    }
))?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeDescriptionRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getAttributeDescriptionAccess().getRefAttAbstract_ATT_IDCrossReference_2_0()); 
	}

)
)	otherlv_5='is' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAttributeDescriptionAccess().getIsKeyword_3());
    }
(
(
		lv_description_6_0=RULE_STRING
		{
			newLeafNode(lv_description_6_0, grammarAccess.getAttributeDescriptionAccess().getDescriptionSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeDescriptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_6_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleConstraints
entryRuleConstraints returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstraintsRule()); }
	 iv_ruleConstraints=ruleConstraints 
	 { $current=$iv_ruleConstraints.current; } 
	 EOF 
;

// Rule Constraints
ruleConstraints returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Constraints:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConstraintsAccess().getConstraintsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstraintsAccess().getConstraintsConstraintParserRuleCall_1_0()); 
	    }
		lv_constraints_1_0=ruleConstraint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstraintsRule());
	        }
       		add(
       			$current, 
       			"constraints",
        		lv_constraints_1_0, 
        		"Constraint");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleConstraint
entryRuleConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstraintRule()); }
	 iv_ruleConstraint=ruleConstraint 
	 { $current=$iv_ruleConstraint.current; } 
	 EOF 
;

// Rule Constraint
ruleConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='constraint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConstraintAccess().getConstraintKeyword_0_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getConstraintAccess().getNameIDTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstraintRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConstraintAccess().getEqualsSignKeyword_0_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getConstraintAccess().getExpressionSubExpression0ParserRuleCall_1_0()); 
	    }
		lv_expression_3_0=ruleSubExpression0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstraintRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"SubExpression0");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSubExpression0
entryRuleSubExpression0 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubExpression0Rule()); }
	 iv_ruleSubExpression0=ruleSubExpression0 
	 { $current=$iv_ruleSubExpression0.current; } 
	 EOF 
;

// Rule SubExpression0
ruleSubExpression0 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSubExpression0Access().getSubExpression1ParserRuleCall_0()); 
    }
    this_SubExpression1_0=ruleSubExpression1
    { 
        $current = $this_SubExpression1_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
)	'?' 
(
(
ruleSubExpression0
)
)	':' 
(
(
ruleSubExpression1
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSubExpression0Access().getIfLeftAction_1_0_0(),
            $current);
    }
)	otherlv_2='?' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubExpression0Access().getQuestionMarkKeyword_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubExpression0Access().getRightSubExpression0ParserRuleCall_1_0_2_0()); 
	    }
		lv_right_3_0=ruleSubExpression0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubExpression0Rule());
	        }
       		add(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"SubExpression0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSubExpression0Access().getColonKeyword_1_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubExpression0Access().getRightSubExpression1ParserRuleCall_1_0_4_0()); 
	    }
		lv_right_5_0=ruleSubExpression1		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubExpression0Rule());
	        }
       		add(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"SubExpression1");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;





// Entry rule entryRuleSubExpression1
entryRuleSubExpression1 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubExpression1Rule()); }
	 iv_ruleSubExpression1=ruleSubExpression1 
	 { $current=$iv_ruleSubExpression1.current; } 
	 EOF 
;

// Rule SubExpression1
ruleSubExpression1 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSubExpression1Access().getSubExpression2ParserRuleCall_0()); 
    }
    this_SubExpression2_0=ruleSubExpression2
    { 
        $current = $this_SubExpression2_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
)	'<-' 
(
(
ruleSubExpression2
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSubExpression1Access().getLeftImplicationLeftAction_1_0_0(),
            $current);
    }
)	otherlv_2='<-' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubExpression1Access().getLessThanSignHyphenMinusKeyword_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubExpression1Access().getRightSubExpression2ParserRuleCall_1_0_2_0()); 
	    }
		lv_right_3_0=ruleSubExpression2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubExpression1Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"SubExpression2");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;





// Entry rule entryRuleSubExpression2
entryRuleSubExpression2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubExpression2Rule()); }
	 iv_ruleSubExpression2=ruleSubExpression2 
	 { $current=$iv_ruleSubExpression2.current; } 
	 EOF 
;

// Rule SubExpression2
ruleSubExpression2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSubExpression2Access().getSubExpression3ParserRuleCall_0()); 
    }
    this_SubExpression3_0=ruleSubExpression3
    { 
        $current = $this_SubExpression3_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
)	'->' 
(
(
ruleSubExpression3
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSubExpression2Access().getRightImplicationLeftAction_1_0_0(),
            $current);
    }
)	otherlv_2='->' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubExpression2Access().getHyphenMinusGreaterThanSignKeyword_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubExpression2Access().getRightSubExpression3ParserRuleCall_1_0_2_0()); 
	    }
		lv_right_3_0=ruleSubExpression3		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubExpression2Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"SubExpression3");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;





// Entry rule entryRuleSubExpression3
entryRuleSubExpression3 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubExpression3Rule()); }
	 iv_ruleSubExpression3=ruleSubExpression3 
	 { $current=$iv_ruleSubExpression3.current; } 
	 EOF 
;

// Rule SubExpression3
ruleSubExpression3 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSubExpression3Access().getSubExpression4ParserRuleCall_0()); 
    }
    this_SubExpression4_0=ruleSubExpression4
    { 
        $current = $this_SubExpression4_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
)	'<->' 
(
(
ruleSubExpression4
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSubExpression3Access().getBiImplicationLeftAction_1_0_0(),
            $current);
    }
)	otherlv_2='<->' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubExpression3Access().getLessThanSignHyphenMinusGreaterThanSignKeyword_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubExpression3Access().getRightSubExpression4ParserRuleCall_1_0_2_0()); 
	    }
		lv_right_3_0=ruleSubExpression4		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubExpression3Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"SubExpression4");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;





// Entry rule entryRuleSubExpression4
entryRuleSubExpression4 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubExpression4Rule()); }
	 iv_ruleSubExpression4=ruleSubExpression4 
	 { $current=$iv_ruleSubExpression4.current; } 
	 EOF 
;

// Rule SubExpression4
ruleSubExpression4 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSubExpression4Access().getSubExpression5ParserRuleCall_0()); 
    }
    this_SubExpression5_0=ruleSubExpression5
    { 
        $current = $this_SubExpression5_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
)	'||' 
(
(
ruleSubExpression5
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSubExpression4Access().getOrLeftAction_1_0_0(),
            $current);
    }
)	otherlv_2='||' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubExpression4Access().getVerticalLineVerticalLineKeyword_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubExpression4Access().getRightSubExpression5ParserRuleCall_1_0_2_0()); 
	    }
		lv_right_3_0=ruleSubExpression5		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubExpression4Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"SubExpression5");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;





// Entry rule entryRuleSubExpression5
entryRuleSubExpression5 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubExpression5Rule()); }
	 iv_ruleSubExpression5=ruleSubExpression5 
	 { $current=$iv_ruleSubExpression5.current; } 
	 EOF 
;

// Rule SubExpression5
ruleSubExpression5 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSubExpression5Access().getSubExpression6ParserRuleCall_0()); 
    }
    this_SubExpression6_0=ruleSubExpression6
    { 
        $current = $this_SubExpression6_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
)	'&&' 
(
(
ruleSubExpression6
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSubExpression5Access().getAndLeftAction_1_0_0(),
            $current);
    }
)	otherlv_2='&&' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubExpression5Access().getAmpersandAmpersandKeyword_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubExpression5Access().getRightSubExpression6ParserRuleCall_1_0_2_0()); 
	    }
		lv_right_3_0=ruleSubExpression6		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubExpression5Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"SubExpression6");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;





// Entry rule entryRuleSubExpression6
entryRuleSubExpression6 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubExpression6Rule()); }
	 iv_ruleSubExpression6=ruleSubExpression6 
	 { $current=$iv_ruleSubExpression6.current; } 
	 EOF 
;

// Rule SubExpression6
ruleSubExpression6 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSubExpression6Access().getSubExpression7ParserRuleCall_0()); 
    }
    this_SubExpression7_0=ruleSubExpression7
    { 
        $current = $this_SubExpression7_0.current; 
        afterParserOrEnumRuleCall();
    }
((((((
)	'==' 
)
    |((
)	'!=' 
))(
(
ruleSubExpression7
)
))*)=>((((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSubExpression6Access().getEqualityLeftAction_1_0_0_0_0(),
            $current);
    }
)	otherlv_2='==' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubExpression6Access().getEqualsSignEqualsSignKeyword_1_0_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSubExpression6Access().getInequalityLeftAction_1_0_0_1_0(),
            $current);
    }
)	otherlv_4='!=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSubExpression6Access().getExclamationMarkEqualsSignKeyword_1_0_0_1_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getSubExpression6Access().getRightSubExpression7ParserRuleCall_1_0_1_0()); 
	    }
		lv_right_5_0=ruleSubExpression7		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubExpression6Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"SubExpression7");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?)
;





// Entry rule entryRuleSubExpression7
entryRuleSubExpression7 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubExpression7Rule()); }
	 iv_ruleSubExpression7=ruleSubExpression7 
	 { $current=$iv_ruleSubExpression7.current; } 
	 EOF 
;

// Rule SubExpression7
ruleSubExpression7 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSubExpression7Access().getSubExpression8ParserRuleCall_0()); 
    }
    this_SubExpression8_0=ruleSubExpression8
    { 
        $current = $this_SubExpression8_0.current; 
        afterParserOrEnumRuleCall();
    }
((((((
)	'<' 
((((
)	'=' 
))=>((
)	'=' 
))?)
    |((
)	'>' 
((((
)	'=' 
))=>((
)	'=' 
))?))(
(
ruleSubExpression8
)
)))=>((((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSubExpression7Access().getLessLeftAction_1_0_0_0_0(),
            $current);
    }
)	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubExpression7Access().getLessThanSignKeyword_1_0_0_0_1());
    }
((((
)	'=' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSubExpression7Access().getLessequalLeftAction_1_0_0_0_2_0_0(),
            $current);
    }
)	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSubExpression7Access().getEqualsSignKeyword_1_0_0_0_2_0_1());
    }
))?)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSubExpression7Access().getGreaterLeftAction_1_0_0_1_0(),
            $current);
    }
)	otherlv_6='>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSubExpression7Access().getGreaterThanSignKeyword_1_0_0_1_1());
    }
((((
)	'=' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSubExpression7Access().getGreaterequalLeftAction_1_0_0_1_2_0_0(),
            $current);
    }
)	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSubExpression7Access().getEqualsSignKeyword_1_0_0_1_2_0_1());
    }
))?))(
(
		{ 
	        newCompositeNode(grammarAccess.getSubExpression7Access().getRightSubExpression8ParserRuleCall_1_0_1_0()); 
	    }
		lv_right_9_0=ruleSubExpression8		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubExpression7Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_9_0, 
        		"SubExpression8");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;





// Entry rule entryRuleSubExpression8
entryRuleSubExpression8 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubExpression8Rule()); }
	 iv_ruleSubExpression8=ruleSubExpression8 
	 { $current=$iv_ruleSubExpression8.current; } 
	 EOF 
;

// Rule SubExpression8
ruleSubExpression8 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSubExpression8Access().getSubExpression9ParserRuleCall_0()); 
    }
    this_SubExpression9_0=ruleSubExpression9
    { 
        $current = $this_SubExpression9_0.current; 
        afterParserOrEnumRuleCall();
    }
((((((
)	'+' 
)
    |((
)	'-' 
))(
(
ruleSubExpression9
)
)))=>((((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSubExpression8Access().getPlusLeftAction_1_0_0_0_0(),
            $current);
    }
)	otherlv_2='+' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubExpression8Access().getPlusSignKeyword_1_0_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSubExpression8Access().getMinusLeftAction_1_0_0_1_0(),
            $current);
    }
)	otherlv_4='-' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSubExpression8Access().getHyphenMinusKeyword_1_0_0_1_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getSubExpression8Access().getRightSubExpression9ParserRuleCall_1_0_1_0()); 
	    }
		lv_right_5_0=ruleSubExpression9		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubExpression8Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"SubExpression9");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;





// Entry rule entryRuleSubExpression9
entryRuleSubExpression9 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubExpression9Rule()); }
	 iv_ruleSubExpression9=ruleSubExpression9 
	 { $current=$iv_ruleSubExpression9.current; } 
	 EOF 
;

// Rule SubExpression9
ruleSubExpression9 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSubExpression9Access().getSubExpression10ParserRuleCall_0()); 
    }
    this_SubExpression10_0=ruleSubExpression10
    { 
        $current = $this_SubExpression10_0.current; 
        afterParserOrEnumRuleCall();
    }
((((((
)	'*' 
)
    |((
)	'/' 
))(
(
ruleSubExpression10
)
)))=>((((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSubExpression9Access().getMultiplicationLeftAction_1_0_0_0_0(),
            $current);
    }
)	otherlv_2='*' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubExpression9Access().getAsteriskKeyword_1_0_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSubExpression9Access().getDivisionLeftAction_1_0_0_1_0(),
            $current);
    }
)	otherlv_4='/' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSubExpression9Access().getSolidusKeyword_1_0_0_1_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getSubExpression9Access().getRightSubExpression10ParserRuleCall_1_0_1_0()); 
	    }
		lv_right_5_0=ruleSubExpression10		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubExpression9Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"SubExpression10");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;





// Entry rule entryRuleSubExpression10
entryRuleSubExpression10 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubExpression10Rule()); }
	 iv_ruleSubExpression10=ruleSubExpression10 
	 { $current=$iv_ruleSubExpression10.current; } 
	 EOF 
;

// Rule SubExpression10
ruleSubExpression10 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSubExpression10Access().getExpressionParserRuleCall_0()); 
    }
    this_Expression_0=ruleExpression
    { 
        $current = $this_Expression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((((
)	'excludes' 
)
    |((
)	'requires' 
))(
(
ruleExpression
)
)))=>((((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSubExpression10Access().getExcludesLeftAction_1_0_0_0_0(),
            $current);
    }
)	otherlv_2='excludes' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubExpression10Access().getExcludesKeyword_1_0_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSubExpression10Access().getRequiresLeftAction_1_0_0_1_0(),
            $current);
    }
)	otherlv_4='requires' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSubExpression10Access().getRequiresKeyword_1_0_0_1_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getSubExpression10Access().getRightExpressionParserRuleCall_1_0_1_0()); 
	    }
		lv_right_5_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubExpression10Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getNumericExpressionParserRuleCall_0()); 
    }
    this_NumericExpression_0=ruleNumericExpression
    { 
        $current = $this_NumericExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getBooleanExpressionParserRuleCall_1()); 
    }
    this_BooleanExpression_1=ruleBooleanExpression
    { 
        $current = $this_BooleanExpression_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getBrackedExpressionParserRuleCall_2()); 
    }
    this_BrackedExpression_2=ruleBrackedExpression
    { 
        $current = $this_BrackedExpression_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getStringExpressionParserRuleCall_3()); 
    }
    this_StringExpression_3=ruleStringExpression
    { 
        $current = $this_StringExpression_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getSpecialExpressionParserRuleCall_4()); 
    }
    this_SpecialExpression_4=ruleSpecialExpression
    { 
        $current = $this_SpecialExpression_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getPrimitiveExpressionParserRuleCall_5()); 
    }
    this_PrimitiveExpression_5=rulePrimitiveExpression
    { 
        $current = $this_PrimitiveExpression_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSpecialExpression
entryRuleSpecialExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpecialExpressionRule()); }
	 iv_ruleSpecialExpression=ruleSpecialExpression 
	 { $current=$iv_ruleSpecialExpression.current; } 
	 EOF 
;

// Rule SpecialExpression
ruleSpecialExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_op_0_0=	'clonesOf' 
    {
        newLeafNode(lv_op_0_0, grammarAccess.getSpecialExpressionAccess().getOpClonesOfKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSpecialExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_0_0, "clonesOf");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSpecialExpressionRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getSpecialExpressionAccess().getExpressionFeatureCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleStringExpression
entryRuleStringExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringExpressionRule()); }
	 iv_ruleStringExpression=ruleStringExpression 
	 { $current=$iv_ruleStringExpression.current; } 
	 EOF 
;

// Rule StringExpression
ruleStringExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_STRING
		{
			newLeafNode(lv_value_0_0, grammarAccess.getStringExpressionAccess().getValueSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"STRING");
	    }

)
)
;





// Entry rule entryRulePrimitiveExpression
entryRulePrimitiveExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimitiveExpressionRule()); }
	 iv_rulePrimitiveExpression=rulePrimitiveExpression 
	 { $current=$iv_rulePrimitiveExpression.current; } 
	 EOF 
;

// Rule PrimitiveExpression
rulePrimitiveExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveExpressionRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getPrimitiveExpressionAccess().getFeatureIDFeatureCrossReference_0_0()); 
	}

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getPrimitiveExpressionAccess().getHeadAttHeadParserRuleCall_1_0_0()); 
	    }
		lv_head_1_0=ruleAttHead		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimitiveExpressionRule());
	        }
       		set(
       			$current, 
       			"head",
        		lv_head_1_0, 
        		"AttHead");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveExpressionRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getPrimitiveExpressionAccess().getRefAttAbstract_ATT_IDCrossReference_1_1_0()); 
	}

)
)))
;





// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanExpressionRule()); }
	 iv_ruleBooleanExpression=ruleBooleanExpression 
	 { $current=$iv_ruleBooleanExpression.current; } 
	 EOF 
;

// Rule BooleanExpression
ruleBooleanExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_value_0_0=	'true' 
    {
        newLeafNode(lv_value_0_0, grammarAccess.getBooleanExpressionAccess().getValueTrueKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanExpressionRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_0, "true");
	    }

)
)
    |(
(
		lv_value_1_0=	'false' 
    {
        newLeafNode(lv_value_1_0, grammarAccess.getBooleanExpressionAccess().getValueFalseKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanExpressionRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_1_0, "false");
	    }

)
)
    |((
(
		lv_op_2_0=	'!' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getBooleanExpressionAccess().getOpExclamationMarkKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "!");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanExpressionAccess().getExpressionBooleanExpressionParserRuleCall_2_1_0()); 
	    }
		lv_expression_3_0=ruleBooleanExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"BooleanExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_op_4_0=	'or' 
    {
        newLeafNode(lv_op_4_0, grammarAccess.getBooleanExpressionAccess().getOpOrKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_4_0, "or");
	    }

)
)	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBooleanExpressionAccess().getLeftParenthesisKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanExpressionAccess().getExpression_listBooleanExpression_ListParserRuleCall_3_2_0()); 
	    }
		lv_expression_list_6_0=ruleBooleanExpression_List		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanExpressionRule());
	        }
       		set(
       			$current, 
       			"expression_list",
        		lv_expression_list_6_0, 
        		"BooleanExpression_List");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getBooleanExpressionAccess().getRightParenthesisKeyword_3_3());
    }
)
    |((
(
		lv_op_8_0=	'xor' 
    {
        newLeafNode(lv_op_8_0, grammarAccess.getBooleanExpressionAccess().getOpXorKeyword_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_8_0, "xor");
	    }

)
)	otherlv_9='(' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getBooleanExpressionAccess().getLeftParenthesisKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanExpressionAccess().getExpression_listBooleanExpression_ListParserRuleCall_4_2_0()); 
	    }
		lv_expression_list_10_0=ruleBooleanExpression_List		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanExpressionRule());
	        }
       		set(
       			$current, 
       			"expression_list",
        		lv_expression_list_10_0, 
        		"BooleanExpression_List");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=')' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getBooleanExpressionAccess().getRightParenthesisKeyword_4_3());
    }
)
    |((
(
		lv_op_12_0=	'and' 
    {
        newLeafNode(lv_op_12_0, grammarAccess.getBooleanExpressionAccess().getOpAndKeyword_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_12_0, "and");
	    }

)
)	otherlv_13='(' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getBooleanExpressionAccess().getLeftParenthesisKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanExpressionAccess().getExpression_listBooleanExpression_ListParserRuleCall_5_2_0()); 
	    }
		lv_expression_list_14_0=ruleBooleanExpression_List		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanExpressionRule());
	        }
       		set(
       			$current, 
       			"expression_list",
        		lv_expression_list_14_0, 
        		"BooleanExpression_List");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_15=')' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getBooleanExpressionAccess().getRightParenthesisKeyword_5_3());
    }
))
;





// Entry rule entryRuleBrackedExpression
entryRuleBrackedExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBrackedExpressionRule()); }
	 iv_ruleBrackedExpression=ruleBrackedExpression 
	 { $current=$iv_ruleBrackedExpression.current; } 
	 EOF 
;

// Rule BrackedExpression
ruleBrackedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBrackedExpressionAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBrackedExpressionAccess().getExpressionSubExpression0ParserRuleCall_1_0()); 
	    }
		lv_expression_1_0=ruleSubExpression0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBrackedExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_1_0, 
        		"SubExpression0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBrackedExpressionAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleNumericExpression
entryRuleNumericExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumericExpressionRule()); }
	 iv_ruleNumericExpression=ruleNumericExpression 
	 { $current=$iv_ruleNumericExpression.current; } 
	 EOF 
;

// Rule NumericExpression
ruleNumericExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getNumericExpressionAccess().getValueIntegerParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumericExpressionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"Integer");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getNumericExpressionAccess().getValueRealParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleReal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumericExpressionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"Real");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		lv_op_2_0=	'neg' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getNumericExpressionAccess().getOpNegKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumericExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "neg");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNumericExpressionAccess().getExpressionNumericExpressionParserRuleCall_2_1_0()); 
	    }
		lv_expression_3_0=ruleNumericExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumericExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"NumericExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_op_4_0=	'abs' 
    {
        newLeafNode(lv_op_4_0, grammarAccess.getNumericExpressionAccess().getOpAbsKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumericExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_4_0, "abs");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNumericExpressionAccess().getExpressionNumericExpressionParserRuleCall_3_1_0()); 
	    }
		lv_expression_5_0=ruleNumericExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumericExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"NumericExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_op_6_0=	'avg' 
    {
        newLeafNode(lv_op_6_0, grammarAccess.getNumericExpressionAccess().getOpAvgKeyword_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumericExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_6_0, "avg");
	    }

)
)	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getNumericExpressionAccess().getLeftParenthesisKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumericExpressionAccess().getExpression_listNumericExpression_ListParserRuleCall_4_2_0()); 
	    }
		lv_expression_list_8_0=ruleNumericExpression_List		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumericExpressionRule());
	        }
       		set(
       			$current, 
       			"expression_list",
        		lv_expression_list_8_0, 
        		"NumericExpression_List");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getNumericExpressionAccess().getRightParenthesisKeyword_4_3());
    }
)
    |((
(
		lv_op_10_0=	'max' 
    {
        newLeafNode(lv_op_10_0, grammarAccess.getNumericExpressionAccess().getOpMaxKeyword_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumericExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_10_0, "max");
	    }

)
)	otherlv_11='(' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getNumericExpressionAccess().getLeftParenthesisKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumericExpressionAccess().getExpression_listNumericExpression_ListParserRuleCall_5_2_0()); 
	    }
		lv_expression_list_12_0=ruleNumericExpression_List		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumericExpressionRule());
	        }
       		set(
       			$current, 
       			"expression_list",
        		lv_expression_list_12_0, 
        		"NumericExpression_List");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getNumericExpressionAccess().getRightParenthesisKeyword_5_3());
    }
)
    |((
(
		lv_op_14_0=	'min' 
    {
        newLeafNode(lv_op_14_0, grammarAccess.getNumericExpressionAccess().getOpMinKeyword_6_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumericExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_14_0, "min");
	    }

)
)	otherlv_15='(' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getNumericExpressionAccess().getLeftParenthesisKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumericExpressionAccess().getExpression_listNumericExpression_ListParserRuleCall_6_2_0()); 
	    }
		lv_expression_list_16_0=ruleNumericExpression_List		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumericExpressionRule());
	        }
       		set(
       			$current, 
       			"expression_list",
        		lv_expression_list_16_0, 
        		"NumericExpression_List");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_17=')' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getNumericExpressionAccess().getRightParenthesisKeyword_6_3());
    }
)
    |((
(
		lv_op_18_0=	'mul' 
    {
        newLeafNode(lv_op_18_0, grammarAccess.getNumericExpressionAccess().getOpMulKeyword_7_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumericExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_18_0, "mul");
	    }

)
)	otherlv_19='(' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getNumericExpressionAccess().getLeftParenthesisKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumericExpressionAccess().getExpression_listNumericExpression_ListParserRuleCall_7_2_0()); 
	    }
		lv_expression_list_20_0=ruleNumericExpression_List		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumericExpressionRule());
	        }
       		set(
       			$current, 
       			"expression_list",
        		lv_expression_list_20_0, 
        		"NumericExpression_List");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_21=')' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getNumericExpressionAccess().getRightParenthesisKeyword_7_3());
    }
)
    |((
(
		lv_op_22_0=	'sum' 
    {
        newLeafNode(lv_op_22_0, grammarAccess.getNumericExpressionAccess().getOpSumKeyword_8_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumericExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_22_0, "sum");
	    }

)
)	otherlv_23='(' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getNumericExpressionAccess().getLeftParenthesisKeyword_8_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumericExpressionAccess().getExpression_listNumericExpression_ListParserRuleCall_8_2_0()); 
	    }
		lv_expression_list_24_0=ruleNumericExpression_List		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumericExpressionRule());
	        }
       		set(
       			$current, 
       			"expression_list",
        		lv_expression_list_24_0, 
        		"NumericExpression_List");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_25=')' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getNumericExpressionAccess().getRightParenthesisKeyword_8_3());
    }
))
;





// Entry rule entryRuleNumericExpression_List
entryRuleNumericExpression_List returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumericExpression_ListRule()); }
	 iv_ruleNumericExpression_List=ruleNumericExpression_List 
	 { $current=$iv_ruleNumericExpression_List.current; } 
	 EOF 
;

// Rule NumericExpression_List
ruleNumericExpression_List returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getNumericExpression_ListAccess().getExNumericExpressionParserRuleCall_0_0()); 
	    }
		lv_ex_0_0=ruleNumericExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumericExpression_ListRule());
	        }
       		add(
       			$current, 
       			"ex",
        		lv_ex_0_0, 
        		"NumericExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNumericExpression_ListAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumericExpression_ListAccess().getExNumericExpressionParserRuleCall_1_1_0()); 
	    }
		lv_ex_2_0=ruleNumericExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumericExpression_ListRule());
	        }
       		add(
       			$current, 
       			"ex",
        		lv_ex_2_0, 
        		"NumericExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleBooleanExpression_List
entryRuleBooleanExpression_List returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanExpression_ListRule()); }
	 iv_ruleBooleanExpression_List=ruleBooleanExpression_List 
	 { $current=$iv_ruleBooleanExpression_List.current; } 
	 EOF 
;

// Rule BooleanExpression_List
ruleBooleanExpression_List returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanExpression_ListAccess().getExBooleanExpressionParserRuleCall_0_0()); 
	    }
		lv_ex_0_0=ruleBooleanExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanExpression_ListRule());
	        }
       		add(
       			$current, 
       			"ex",
        		lv_ex_0_0, 
        		"BooleanExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBooleanExpression_ListAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanExpression_ListAccess().getExBooleanExpressionParserRuleCall_1_1_0()); 
	    }
		lv_ex_2_0=ruleBooleanExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanExpression_ListRule());
	        }
       		add(
       			$current, 
       			"ex",
        		lv_ex_2_0, 
        		"BooleanExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleObjectives
entryRuleObjectives returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObjectivesRule()); }
	 iv_ruleObjectives=ruleObjectives 
	 { $current=$iv_ruleObjectives.current; } 
	 EOF 
;

// Rule Objectives
ruleObjectives returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Objectives:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getObjectivesAccess().getObjectivesKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getObjectivesAccess().getObjectivesObjectiveParserRuleCall_1_0()); 
	    }
		lv_objectives_1_0=ruleObjective		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjectivesRule());
	        }
       		add(
       			$current, 
       			"objectives",
        		lv_objectives_1_0, 
        		"Objective");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleObjective
entryRuleObjective returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObjectiveRule()); }
	 iv_ruleObjective=ruleObjective 
	 { $current=$iv_ruleObjective.current; } 
	 EOF 
;

// Rule Objective
ruleObjective returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='objective' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getObjectiveAccess().getObjectiveKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getObjectiveAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectiveRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getObjectiveAccess().getLeftCurlyBracketKeyword_2());
    }
(((
(
		lv_op_3_0=	'max' 
    {
        newLeafNode(lv_op_3_0, grammarAccess.getObjectiveAccess().getOpMaxKeyword_3_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectiveRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_3_0, "max");
	    }

)
)	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getObjectiveAccess().getLeftParenthesisKeyword_3_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getObjectiveAccess().getExpressionObjectiveExpressionParserRuleCall_3_0_2_0()); 
	    }
		lv_expression_5_0=ruleObjectiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjectiveRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"ObjectiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getObjectiveAccess().getRightParenthesisKeyword_3_0_3());
    }
)
    |((
(
		lv_op_7_0=	'min' 
    {
        newLeafNode(lv_op_7_0, grammarAccess.getObjectiveAccess().getOpMinKeyword_3_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectiveRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_7_0, "min");
	    }

)
)	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getObjectiveAccess().getLeftParenthesisKeyword_3_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getObjectiveAccess().getExpressionObjectiveExpressionParserRuleCall_3_1_2_0()); 
	    }
		lv_expression_9_0=ruleObjectiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjectiveRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_9_0, 
        		"ObjectiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getObjectiveAccess().getRightParenthesisKeyword_3_1_3());
    }
))	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getObjectiveAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleObjectiveExpression
entryRuleObjectiveExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObjectiveExpressionRule()); }
	 iv_ruleObjectiveExpression=ruleObjectiveExpression 
	 { $current=$iv_ruleObjectiveExpression.current; } 
	 EOF 
;

// Rule ObjectiveExpression
ruleObjectiveExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_op_0_0=	'sum' 
    {
        newLeafNode(lv_op_0_0, grammarAccess.getObjectiveExpressionAccess().getOpSumKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectiveExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_0_0, "sum");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getObjectiveExpressionAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getObjectiveExpressionAccess().getExpressionPrimitiveExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=rulePrimitiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjectiveExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"PrimitiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getObjectiveExpressionAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleConfigurations
entryRuleConfigurations returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConfigurationsRule()); }
	 iv_ruleConfigurations=ruleConfigurations 
	 { $current=$iv_ruleConfigurations.current; } 
	 EOF 
;

// Rule Configurations
ruleConfigurations returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Configurations:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConfigurationsAccess().getConfigurationsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConfigurationsAccess().getConfigurationsConfigurationParserRuleCall_1_0()); 
	    }
		lv_configurations_1_0=ruleConfiguration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConfigurationsRule());
	        }
       		add(
       			$current, 
       			"configurations",
        		lv_configurations_1_0, 
        		"Configuration");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleConfiguration
entryRuleConfiguration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConfigurationRule()); }
	 iv_ruleConfiguration=ruleConfiguration 
	 { $current=$iv_ruleConfiguration.current; } 
	 EOF 
;

// Rule Configuration
ruleConfiguration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='configuration' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConfigurationAccess().getConfigurationKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getConfigurationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConfigurationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConfigurationAccess().getLeftCurlyBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getConfigurationAccess().getBooleanValuationBooleanValuationParserRuleCall_3_0_0()); 
	    }
		lv_booleanValuation_3_0=ruleBooleanValuation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConfigurationRule());
	        }
       		add(
       			$current, 
       			"booleanValuation",
        		lv_booleanValuation_3_0, 
        		"BooleanValuation");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getConfigurationAccess().getExtendedValuationExtendedValuationParserRuleCall_3_1_0()); 
	    }
		lv_extendedValuation_4_0=ruleExtendedValuation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConfigurationRule());
	        }
       		add(
       			$current, 
       			"extendedValuation",
        		lv_extendedValuation_4_0, 
        		"ExtendedValuation");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConfigurationAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleBooleanValuation
entryRuleBooleanValuation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanValuationRule()); }
	 iv_ruleBooleanValuation=ruleBooleanValuation 
	 { $current=$iv_ruleBooleanValuation.current; } 
	 EOF 
;

// Rule BooleanValuation
ruleBooleanValuation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_notSelected_0_0=	'!' 
    {
        newLeafNode(lv_notSelected_0_0, grammarAccess.getBooleanValuationAccess().getNotSelectedExclamationMarkKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanValuationRule());
	        }
       		setWithLastConsumed($current, "notSelected", true, "!");
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanValuationRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getBooleanValuationAccess().getFeatureFeatureCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleExtendedValuation
entryRuleExtendedValuation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExtendedValuationRule()); }
	 iv_ruleExtendedValuation=ruleExtendedValuation 
	 { $current=$iv_ruleExtendedValuation.current; } 
	 EOF 
;

// Rule ExtendedValuation
ruleExtendedValuation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExtendedValuationAccess().getBasicAttrValuationParserRuleCall_0()); 
    }
    this_BasicAttrValuation_0=ruleBasicAttrValuation
    { 
        $current = $this_BasicAttrValuation_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExtendedValuationAccess().getAdvancedAttrValuationParserRuleCall_1()); 
    }
    this_AdvancedAttrValuation_1=ruleAdvancedAttrValuation
    { 
        $current = $this_AdvancedAttrValuation_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBasicAttrValuation
entryRuleBasicAttrValuation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBasicAttrValuationRule()); }
	 iv_ruleBasicAttrValuation=ruleBasicAttrValuation 
	 { $current=$iv_ruleBasicAttrValuation.current; } 
	 EOF 
;

// Rule BasicAttrValuation
ruleBasicAttrValuation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBasicAttrValuationAccess().getStringAttrValuationParserRuleCall_0()); 
    }
    this_StringAttrValuation_0=ruleStringAttrValuation
    { 
        $current = $this_StringAttrValuation_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBasicAttrValuationAccess().getBooleanAttrValuationParserRuleCall_1()); 
    }
    this_BooleanAttrValuation_1=ruleBooleanAttrValuation
    { 
        $current = $this_BooleanAttrValuation_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBasicAttrValuationAccess().getIntegerAttrValuationParserRuleCall_2()); 
    }
    this_IntegerAttrValuation_2=ruleIntegerAttrValuation
    { 
        $current = $this_IntegerAttrValuation_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBasicAttrValuationAccess().getRealAttrValuationParserRuleCall_3()); 
    }
    this_RealAttrValuation_3=ruleRealAttrValuation
    { 
        $current = $this_RealAttrValuation_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRealAttrValuation
entryRuleRealAttrValuation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealAttrValuationRule()); }
	 iv_ruleRealAttrValuation=ruleRealAttrValuation 
	 { $current=$iv_ruleRealAttrValuation.current; } 
	 EOF 
;

// Rule RealAttrValuation
ruleRealAttrValuation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getRealAttrValuationAccess().getHeadAttHeadParserRuleCall_0_0()); 
	    }
		lv_head_0_0=ruleAttHead		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealAttrValuationRule());
	        }
       		set(
       			$current, 
       			"head",
        		lv_head_0_0, 
        		"AttHead");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRealAttrValuationRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getRealAttrValuationAccess().getRefAttReal_ATT_IDCrossReference_1_0()); 
	}

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRealAttrValuationAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRealAttrValuationAccess().getValueRealParserRuleCall_3_0()); 
	    }
		lv_value_3_0=ruleReal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealAttrValuationRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"Real");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIntegerAttrValuation
entryRuleIntegerAttrValuation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerAttrValuationRule()); }
	 iv_ruleIntegerAttrValuation=ruleIntegerAttrValuation 
	 { $current=$iv_ruleIntegerAttrValuation.current; } 
	 EOF 
;

// Rule IntegerAttrValuation
ruleIntegerAttrValuation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerAttrValuationAccess().getHeadAttHeadParserRuleCall_0_0()); 
	    }
		lv_head_0_0=ruleAttHead		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerAttrValuationRule());
	        }
       		set(
       			$current, 
       			"head",
        		lv_head_0_0, 
        		"AttHead");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerAttrValuationRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getIntegerAttrValuationAccess().getRefAttInteger_ATT_IDCrossReference_1_0()); 
	}

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIntegerAttrValuationAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerAttrValuationAccess().getValueIntegerParserRuleCall_3_0()); 
	    }
		lv_value_3_0=ruleInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerAttrValuationRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"Integer");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleBooleanAttrValuation
entryRuleBooleanAttrValuation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanAttrValuationRule()); }
	 iv_ruleBooleanAttrValuation=ruleBooleanAttrValuation 
	 { $current=$iv_ruleBooleanAttrValuation.current; } 
	 EOF 
;

// Rule BooleanAttrValuation
ruleBooleanAttrValuation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanAttrValuationAccess().getHeadAttHeadParserRuleCall_0_0()); 
	    }
		lv_head_0_0=ruleAttHead		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanAttrValuationRule());
	        }
       		set(
       			$current, 
       			"head",
        		lv_head_0_0, 
        		"AttHead");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanAttrValuationRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getBooleanAttrValuationAccess().getRefAttBoolean_ATT_IDCrossReference_1_0()); 
	}

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBooleanAttrValuationAccess().getEqualsSignKeyword_2());
    }
(
(
(
		lv_value_3_1=	'true' 
    {
        newLeafNode(lv_value_3_1, grammarAccess.getBooleanAttrValuationAccess().getValueTrueKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanAttrValuationRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_3_1, null);
	    }

    |		lv_value_3_2=	'false' 
    {
        newLeafNode(lv_value_3_2, grammarAccess.getBooleanAttrValuationAccess().getValueFalseKeyword_3_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanAttrValuationRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_3_2, null);
	    }

)

)
))
;





// Entry rule entryRuleStringAttrValuation
entryRuleStringAttrValuation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringAttrValuationRule()); }
	 iv_ruleStringAttrValuation=ruleStringAttrValuation 
	 { $current=$iv_ruleStringAttrValuation.current; } 
	 EOF 
;

// Rule StringAttrValuation
ruleStringAttrValuation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getStringAttrValuationAccess().getHeadAttHeadParserRuleCall_0_0()); 
	    }
		lv_head_0_0=ruleAttHead		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringAttrValuationRule());
	        }
       		set(
       			$current, 
       			"head",
        		lv_head_0_0, 
        		"AttHead");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringAttrValuationRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getStringAttrValuationAccess().getRefAttString_ATT_IDCrossReference_1_0()); 
	}

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStringAttrValuationAccess().getEqualsSignKeyword_2());
    }
(
(
		lv_value_3_0=RULE_STRING
		{
			newLeafNode(lv_value_3_0, grammarAccess.getStringAttrValuationAccess().getValueSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringAttrValuationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleAdvancedAttrValuation
entryRuleAdvancedAttrValuation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAdvancedAttrValuationRule()); }
	 iv_ruleAdvancedAttrValuation=ruleAdvancedAttrValuation 
	 { $current=$iv_ruleAdvancedAttrValuation.current; } 
	 EOF 
;

// Rule AdvancedAttrValuation
ruleAdvancedAttrValuation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAdvancedAttrValuationAccess().getAttVsValTableBasedValuationByFeatureParserRuleCall_0_0()); 
	    }
		lv_attVsVal_0_0=ruleTableBasedValuationByFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdvancedAttrValuationRule());
	        }
       		set(
       			$current, 
       			"attVsVal",
        		lv_attVsVal_0_0, 
        		"TableBasedValuationByFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAdvancedAttrValuationAccess().getFeatVsValTableBasedValuationByAttributeParserRuleCall_1_0()); 
	    }
		lv_featVsVal_1_0=ruleTableBasedValuationByAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdvancedAttrValuationRule());
	        }
       		add(
       			$current, 
       			"featVsVal",
        		lv_featVsVal_1_0, 
        		"TableBasedValuationByAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAdvancedAttrValuationAccess().getAttVsValForMultiFeatureTableBasedValuationByFeatureAndCloneParserRuleCall_2_0()); 
	    }
		lv_attVsValForMultiFeature_2_0=ruleTableBasedValuationByFeatureAndClone		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdvancedAttrValuationRule());
	        }
       		set(
       			$current, 
       			"attVsValForMultiFeature",
        		lv_attVsValForMultiFeature_2_0, 
        		"TableBasedValuationByFeatureAndClone");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTableBasedValuationByFeatureAndClone
entryRuleTableBasedValuationByFeatureAndClone returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTableBasedValuationByFeatureAndCloneRule()); }
	 iv_ruleTableBasedValuationByFeatureAndClone=ruleTableBasedValuationByFeatureAndClone 
	 { $current=$iv_ruleTableBasedValuationByFeatureAndClone.current; } 
	 EOF 
;

// Rule TableBasedValuationByFeatureAndClone
ruleTableBasedValuationByFeatureAndClone returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	otherlv_0='attribute-value pairs for clone feature:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTableBasedValuationByFeatureAndCloneAccess().getAttributeValuePairsForCloneFeatureKeyword_0_0_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableBasedValuationByFeatureAndCloneRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getTableBasedValuationByFeatureAndCloneAccess().getRefFeatureFeatureCrossReference_0_0_1_0()); 
	}

)
)	otherlv_2='clone:' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTableBasedValuationByFeatureAndCloneAccess().getCloneKeyword_0_0_2());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getTableBasedValuationByFeatureAndCloneAccess().getNameIDTerminalRuleCall_0_0_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableBasedValuationByFeatureAndCloneRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))
    |((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableBasedValuationByFeatureAndCloneRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getTableBasedValuationByFeatureAndCloneAccess().getRefFeatureFeatureCrossReference_0_1_0_0()); 
	}

)
)	otherlv_5='[' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTableBasedValuationByFeatureAndCloneAccess().getLeftSquareBracketKeyword_0_1_1());
    }
(
(
		lv_name_6_0=RULE_ID
		{
			newLeafNode(lv_name_6_0, grammarAccess.getTableBasedValuationByFeatureAndCloneAccess().getNameIDTerminalRuleCall_0_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableBasedValuationByFeatureAndCloneRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_6_0, 
        		"ID");
	    }

)
)	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTableBasedValuationByFeatureAndCloneAccess().getRightSquareBracketKeyword_0_1_3());
    }
))	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTableBasedValuationByFeatureAndCloneAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableBasedValuationByFeatureAndCloneAccess().getPairsPairAttributeValueParserRuleCall_2_0()); 
	    }
		lv_pairs_9_0=rulePairAttributeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableBasedValuationByFeatureAndCloneRule());
	        }
       		add(
       			$current, 
       			"pairs",
        		lv_pairs_9_0, 
        		"PairAttributeValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getTableBasedValuationByFeatureAndCloneAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableBasedValuationByFeatureAndCloneAccess().getPairsPairAttributeValueParserRuleCall_3_1_0()); 
	    }
		lv_pairs_11_0=rulePairAttributeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableBasedValuationByFeatureAndCloneRule());
	        }
       		add(
       			$current, 
       			"pairs",
        		lv_pairs_11_0, 
        		"PairAttributeValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getTableBasedValuationByFeatureAndCloneAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleTableBasedValuationByFeature
entryRuleTableBasedValuationByFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTableBasedValuationByFeatureRule()); }
	 iv_ruleTableBasedValuationByFeature=ruleTableBasedValuationByFeature 
	 { $current=$iv_ruleTableBasedValuationByFeature.current; } 
	 EOF 
;

// Rule TableBasedValuationByFeature
ruleTableBasedValuationByFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='attribute-value pairs for feature:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTableBasedValuationByFeatureAccess().getAttributeValuePairsForFeatureKeyword_0());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableBasedValuationByFeatureRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getTableBasedValuationByFeatureAccess().getRefFeatureFeatureCrossReference_1_0()); 
	}

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTableBasedValuationByFeatureAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableBasedValuationByFeatureAccess().getPairsPairAttributeValueParserRuleCall_3_0()); 
	    }
		lv_pairs_3_0=rulePairAttributeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableBasedValuationByFeatureRule());
	        }
       		add(
       			$current, 
       			"pairs",
        		lv_pairs_3_0, 
        		"PairAttributeValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTableBasedValuationByFeatureAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableBasedValuationByFeatureAccess().getPairsPairAttributeValueParserRuleCall_4_1_0()); 
	    }
		lv_pairs_5_0=rulePairAttributeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableBasedValuationByFeatureRule());
	        }
       		add(
       			$current, 
       			"pairs",
        		lv_pairs_5_0, 
        		"PairAttributeValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTableBasedValuationByFeatureAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRulePairAttributeValue
entryRulePairAttributeValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPairAttributeValueRule()); }
	 iv_rulePairAttributeValue=rulePairAttributeValue 
	 { $current=$iv_rulePairAttributeValue.current; } 
	 EOF 
;

// Rule PairAttributeValue
rulePairAttributeValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPairAttributeValueRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getPairAttributeValueAccess().getRefAttReal_ATT_IDCrossReference_0_0_0()); 
	}

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPairAttributeValueAccess().getEqualsSignKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPairAttributeValueAccess().getValueRealParserRuleCall_0_2_0()); 
	    }
		lv_value_2_0=ruleReal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPairAttributeValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Real");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPairAttributeValueRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getPairAttributeValueAccess().getRefAttInteger_ATT_IDCrossReference_1_0_0()); 
	}

)
)	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPairAttributeValueAccess().getEqualsSignKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPairAttributeValueAccess().getValueIntegerParserRuleCall_1_2_0()); 
	    }
		lv_value_5_0=ruleInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPairAttributeValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"Integer");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPairAttributeValueRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getPairAttributeValueAccess().getRefAttBoolean_ATT_IDCrossReference_2_0_0()); 
	}

)
)	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPairAttributeValueAccess().getEqualsSignKeyword_2_1());
    }
(
(
(
		lv_value_8_1=	'true' 
    {
        newLeafNode(lv_value_8_1, grammarAccess.getPairAttributeValueAccess().getValueTrueKeyword_2_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPairAttributeValueRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_8_1, null);
	    }

    |		lv_value_8_2=	'false' 
    {
        newLeafNode(lv_value_8_2, grammarAccess.getPairAttributeValueAccess().getValueFalseKeyword_2_2_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPairAttributeValueRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_8_2, null);
	    }

)

)
))
    |((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPairAttributeValueRule());
	        }
        }
	otherlv_9=RULE_ID
	{
		newLeafNode(otherlv_9, grammarAccess.getPairAttributeValueAccess().getRefAttString_ATT_IDCrossReference_3_0_0()); 
	}

)
)	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getPairAttributeValueAccess().getEqualsSignKeyword_3_1());
    }
(
(
		lv_value_11_0=RULE_STRING
		{
			newLeafNode(lv_value_11_0, grammarAccess.getPairAttributeValueAccess().getValueSTRINGTerminalRuleCall_3_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPairAttributeValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_11_0, 
        		"STRING");
	    }

)
)))
;





// Entry rule entryRuleTableBasedValuationByAttribute
entryRuleTableBasedValuationByAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTableBasedValuationByAttributeRule()); }
	 iv_ruleTableBasedValuationByAttribute=ruleTableBasedValuationByAttribute 
	 { $current=$iv_ruleTableBasedValuationByAttribute.current; } 
	 EOF 
;

// Rule TableBasedValuationByAttribute
ruleTableBasedValuationByAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	otherlv_0='feature-value pairs for attribute:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTableBasedValuationByAttributeAccess().getFeatureValuePairsForAttributeKeyword_0_0());
    }
)?
    { 
        newCompositeNode(grammarAccess.getTableBasedValuationByAttributeAccess().getTableBasedValuationByAttributeForIntegerParserRuleCall_0_1()); 
    }
    this_TableBasedValuationByAttributeForInteger_1=ruleTableBasedValuationByAttributeForInteger
    { 
        $current = $this_TableBasedValuationByAttributeForInteger_1.current; 
        afterParserOrEnumRuleCall();
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getTableBasedValuationByAttributeAccess().getTableBasedValuationByAttributeForRealParserRuleCall_1()); 
    }
    this_TableBasedValuationByAttributeForReal_2=ruleTableBasedValuationByAttributeForReal
    { 
        $current = $this_TableBasedValuationByAttributeForReal_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTableBasedValuationByAttributeForInteger
entryRuleTableBasedValuationByAttributeForInteger returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTableBasedValuationByAttributeForIntegerRule()); }
	 iv_ruleTableBasedValuationByAttributeForInteger=ruleTableBasedValuationByAttributeForInteger 
	 { $current=$iv_ruleTableBasedValuationByAttributeForInteger.current; } 
	 EOF 
;

// Rule TableBasedValuationByAttributeForInteger
ruleTableBasedValuationByAttributeForInteger returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableBasedValuationByAttributeForIntegerRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getTableBasedValuationByAttributeForIntegerAccess().getRefAttInteger_ATT_IDCrossReference_0_0()); 
	}

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTableBasedValuationByAttributeForIntegerAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableBasedValuationByAttributeForIntegerAccess().getPairsPairFeatureIntegerParserRuleCall_2_0()); 
	    }
		lv_pairs_2_0=rulePairFeatureInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableBasedValuationByAttributeForIntegerRule());
	        }
       		add(
       			$current, 
       			"pairs",
        		lv_pairs_2_0, 
        		"PairFeatureInteger");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTableBasedValuationByAttributeForIntegerAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableBasedValuationByAttributeForIntegerAccess().getPairsPairFeatureIntegerParserRuleCall_3_1_0()); 
	    }
		lv_pairs_4_0=rulePairFeatureInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableBasedValuationByAttributeForIntegerRule());
	        }
       		add(
       			$current, 
       			"pairs",
        		lv_pairs_4_0, 
        		"PairFeatureInteger");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTableBasedValuationByAttributeForIntegerAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRulePairFeatureInteger
entryRulePairFeatureInteger returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPairFeatureIntegerRule()); }
	 iv_rulePairFeatureInteger=rulePairFeatureInteger 
	 { $current=$iv_rulePairFeatureInteger.current; } 
	 EOF 
;

// Rule PairFeatureInteger
rulePairFeatureInteger returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPairFeatureIntegerRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getPairFeatureIntegerAccess().getRefFeatFeatureCrossReference_0_0()); 
	}

)
)	otherlv_1='-' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPairFeatureIntegerAccess().getHyphenMinusKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPairFeatureIntegerAccess().getValueIntegerParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPairFeatureIntegerRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Integer");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTableBasedValuationByAttributeForReal
entryRuleTableBasedValuationByAttributeForReal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTableBasedValuationByAttributeForRealRule()); }
	 iv_ruleTableBasedValuationByAttributeForReal=ruleTableBasedValuationByAttributeForReal 
	 { $current=$iv_ruleTableBasedValuationByAttributeForReal.current; } 
	 EOF 
;

// Rule TableBasedValuationByAttributeForReal
ruleTableBasedValuationByAttributeForReal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableBasedValuationByAttributeForRealRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getTableBasedValuationByAttributeForRealAccess().getRefAttReal_ATT_IDCrossReference_0_0()); 
	}

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTableBasedValuationByAttributeForRealAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableBasedValuationByAttributeForRealAccess().getPairsPairFeatureRealParserRuleCall_2_0()); 
	    }
		lv_pairs_2_0=rulePairFeatureReal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableBasedValuationByAttributeForRealRule());
	        }
       		add(
       			$current, 
       			"pairs",
        		lv_pairs_2_0, 
        		"PairFeatureReal");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTableBasedValuationByAttributeForRealAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableBasedValuationByAttributeForRealAccess().getPairsPairFeatureRealParserRuleCall_3_1_0()); 
	    }
		lv_pairs_4_0=rulePairFeatureReal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableBasedValuationByAttributeForRealRule());
	        }
       		add(
       			$current, 
       			"pairs",
        		lv_pairs_4_0, 
        		"PairFeatureReal");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTableBasedValuationByAttributeForRealAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRulePairFeatureReal
entryRulePairFeatureReal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPairFeatureRealRule()); }
	 iv_rulePairFeatureReal=rulePairFeatureReal 
	 { $current=$iv_rulePairFeatureReal.current; } 
	 EOF 
;

// Rule PairFeatureReal
rulePairFeatureReal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPairFeatureRealRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getPairFeatureRealAccess().getRefFeatFeatureCrossReference_0_0()); 
	}

)
)	otherlv_1='-' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPairFeatureRealAccess().getHyphenMinusKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPairFeatureRealAccess().getValueRealParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleReal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPairFeatureRealRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Real");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleReal
entryRuleReal returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealRule()); } 
	 iv_ruleReal=ruleReal 
	 { $current=$iv_ruleReal.current.getText(); }  
	 EOF 
;

// Rule Real
ruleReal returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRealAccess().getIntegerParserRuleCall_0()); 
    }
    this_Integer_0=ruleInteger    {
		$current.merge(this_Integer_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRealAccess().getFullStopKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getRealAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleInteger
entryRuleInteger returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerRule()); } 
	 iv_ruleInteger=ruleInteger 
	 { $current=$iv_ruleInteger.current.getText(); }  
	 EOF 
;

// Rule Integer
ruleInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard 
	 { $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); 
    }
)?)
    ;





// Entry rule entryRuleBoolean_ATT_ID
entryRuleBoolean_ATT_ID returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoolean_ATT_IDRule()); }
	 iv_ruleBoolean_ATT_ID=ruleBoolean_ATT_ID 
	 { $current=$iv_ruleBoolean_ATT_ID.current; } 
	 EOF 
;

// Rule Boolean_ATT_ID
ruleBoolean_ATT_ID returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getBoolean_ATT_IDAccess().getHeadAttHeadParserRuleCall_0_0()); 
	    }
		lv_head_0_0=ruleAttHead		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoolean_ATT_IDRule());
	        }
       		set(
       			$current, 
       			"head",
        		lv_head_0_0, 
        		"AttHead");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getBoolean_ATT_IDAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBoolean_ATT_IDRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleString_ATT_ID
entryRuleString_ATT_ID returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getString_ATT_IDRule()); }
	 iv_ruleString_ATT_ID=ruleString_ATT_ID 
	 { $current=$iv_ruleString_ATT_ID.current; } 
	 EOF 
;

// Rule String_ATT_ID
ruleString_ATT_ID returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getString_ATT_IDAccess().getHeadAttHeadParserRuleCall_0_0()); 
	    }
		lv_head_0_0=ruleAttHead		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getString_ATT_IDRule());
	        }
       		set(
       			$current, 
       			"head",
        		lv_head_0_0, 
        		"AttHead");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getString_ATT_IDAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getString_ATT_IDRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleInteger_ATT_ID
entryRuleInteger_ATT_ID returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInteger_ATT_IDRule()); }
	 iv_ruleInteger_ATT_ID=ruleInteger_ATT_ID 
	 { $current=$iv_ruleInteger_ATT_ID.current; } 
	 EOF 
;

// Rule Integer_ATT_ID
ruleInteger_ATT_ID returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInteger_ATT_IDAccess().getHeadAttHeadParserRuleCall_0_0()); 
	    }
		lv_head_0_0=ruleAttHead		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteger_ATT_IDRule());
	        }
       		set(
       			$current, 
       			"head",
        		lv_head_0_0, 
        		"AttHead");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getInteger_ATT_IDAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteger_ATT_IDRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleReal_ATT_ID
entryRuleReal_ATT_ID returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReal_ATT_IDRule()); }
	 iv_ruleReal_ATT_ID=ruleReal_ATT_ID 
	 { $current=$iv_ruleReal_ATT_ID.current; } 
	 EOF 
;

// Rule Real_ATT_ID
ruleReal_ATT_ID returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getReal_ATT_IDAccess().getHeadAttHeadParserRuleCall_0_0()); 
	    }
		lv_head_0_0=ruleAttHead		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReal_ATT_IDRule());
	        }
       		set(
       			$current, 
       			"head",
        		lv_head_0_0, 
        		"AttHead");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getReal_ATT_IDAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReal_ATT_IDRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleEnum_String_ATT_ID
entryRuleEnum_String_ATT_ID returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnum_String_ATT_IDRule()); }
	 iv_ruleEnum_String_ATT_ID=ruleEnum_String_ATT_ID 
	 { $current=$iv_ruleEnum_String_ATT_ID.current; } 
	 EOF 
;

// Rule Enum_String_ATT_ID
ruleEnum_String_ATT_ID returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getEnum_String_ATT_IDAccess().getHeadAttHeadParserRuleCall_0_0()); 
	    }
		lv_head_0_0=ruleAttHead		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnum_String_ATT_IDRule());
	        }
       		set(
       			$current, 
       			"head",
        		lv_head_0_0, 
        		"AttHead");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEnum_String_ATT_IDAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnum_String_ATT_IDRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleEnum_Integer_ATT_ID
entryRuleEnum_Integer_ATT_ID returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnum_Integer_ATT_IDRule()); }
	 iv_ruleEnum_Integer_ATT_ID=ruleEnum_Integer_ATT_ID 
	 { $current=$iv_ruleEnum_Integer_ATT_ID.current; } 
	 EOF 
;

// Rule Enum_Integer_ATT_ID
ruleEnum_Integer_ATT_ID returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getEnum_Integer_ATT_IDAccess().getHeadAttHeadParserRuleCall_0_0()); 
	    }
		lv_head_0_0=ruleAttHead		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnum_Integer_ATT_IDRule());
	        }
       		set(
       			$current, 
       			"head",
        		lv_head_0_0, 
        		"AttHead");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEnum_Integer_ATT_IDAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnum_Integer_ATT_IDRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleEnum_Real_ATT_ID
entryRuleEnum_Real_ATT_ID returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnum_Real_ATT_IDRule()); }
	 iv_ruleEnum_Real_ATT_ID=ruleEnum_Real_ATT_ID 
	 { $current=$iv_ruleEnum_Real_ATT_ID.current; } 
	 EOF 
;

// Rule Enum_Real_ATT_ID
ruleEnum_Real_ATT_ID returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getEnum_Real_ATT_IDAccess().getHeadAttHeadParserRuleCall_0_0()); 
	    }
		lv_head_0_0=ruleAttHead		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnum_Real_ATT_IDRule());
	        }
       		set(
       			$current, 
       			"head",
        		lv_head_0_0, 
        		"AttHead");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEnum_Real_ATT_IDAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnum_Real_ATT_IDRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleAttHead
entryRuleAttHead returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttHeadRule()); }
	 iv_ruleAttHead=ruleAttHead 
	 { $current=$iv_ruleAttHead.current; } 
	 EOF 
;

// Rule AttHead
ruleAttHead returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_forAllFeatures_0_0=	'*.' 
    {
        newLeafNode(lv_forAllFeatures_0_0, grammarAccess.getAttHeadAccess().getForAllFeaturesAsteriskFullStopKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttHeadRule());
	        }
       		setWithLastConsumed($current, "forAllFeatures", true, "*.");
	    }

)
)
    |((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttHeadRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getAttHeadAccess().getOwnedFeatureFeatureCrossReference_1_0_0()); 
	}

)
)	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAttHeadAccess().getFullStopKeyword_1_1());
    }
))
;







RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


